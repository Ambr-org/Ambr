// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HistoryItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitForReceiveItem;
}  // namespace protobuf_rpc_2eproto
namespace ambr {
namespace rpc {
class AddUnitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUnitRequest>
      _instance;
} _AddUnitRequest_default_instance_;
class AddUnitReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUnitReply>
      _instance;
} _AddUnitReply_default_instance_;
class WaitForReceiveItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForReceiveItem>
      _instance;
} _WaitForReceiveItem_default_instance_;
class GetWaitForReceiveUnitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWaitForReceiveUnitRequest>
      _instance;
} _GetWaitForReceiveUnitRequest_default_instance_;
class GetWaitForReceiveUnitReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWaitForReceiveUnitReply>
      _instance;
} _GetWaitForReceiveUnitReply_default_instance_;
class GetBalanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceRequest>
      _instance;
} _GetBalanceRequest_default_instance_;
class GetBalanceReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceReply>
      _instance;
} _GetBalanceReply_default_instance_;
class HistoryItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HistoryItem>
      _instance;
} _HistoryItem_default_instance_;
class GetHistoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetHistoryRequest>
      _instance;
} _GetHistoryRequest_default_instance_;
class GetHistoryReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetHistoryReply>
      _instance;
} _GetHistoryReply_default_instance_;
class SendMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMessageRequest>
      _instance;
} _SendMessageRequest_default_instance_;
class SendMessageReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMessageReply>
      _instance;
} _SendMessageReply_default_instance_;
class GetLastUnitHashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLastUnitHashRequest>
      _instance;
} _GetLastUnitHashRequest_default_instance_;
class GetLastUnitHashReplayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLastUnitHashReplay>
      _instance;
} _GetLastUnitHashReplay_default_instance_;
class MessageStreamRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageStreamRequest>
      _instance;
} _MessageStreamRequest_default_instance_;
class MessageStreamReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageStreamReply>
      _instance;
} _MessageStreamReply_default_instance_;
class PubSendTransfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubSendTransfRequest>
      _instance;
} _PubSendTransfRequest_default_instance_;
class PubSendTransfReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubSendTransfReply>
      _instance;
} _PubSendTransfReply_default_instance_;
class PubReceiveTransfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubReceiveTransfRequest>
      _instance;
} _PubReceiveTransfRequest_default_instance_;
class PubReceiveTransfReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubReceiveTransfReply>
      _instance;
} _PubReceiveTransfReply_default_instance_;
class PubSendMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubSendMessageRequest>
      _instance;
} _PubSendMessageRequest_default_instance_;
class PubSendMessageReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubSendMessageReply>
      _instance;
} _PubSendMessageReply_default_instance_;
}  // namespace rpc
}  // namespace ambr
namespace protobuf_rpc_2eproto {
static void InitDefaultsAddUnitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_AddUnitRequest_default_instance_;
    new (ptr) ::ambr::rpc::AddUnitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::AddUnitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddUnitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddUnitRequest}, {}};

static void InitDefaultsAddUnitReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_AddUnitReply_default_instance_;
    new (ptr) ::ambr::rpc::AddUnitReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::AddUnitReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddUnitReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddUnitReply}, {}};

static void InitDefaultsWaitForReceiveItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_WaitForReceiveItem_default_instance_;
    new (ptr) ::ambr::rpc::WaitForReceiveItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::WaitForReceiveItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitForReceiveItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitForReceiveItem}, {}};

static void InitDefaultsGetWaitForReceiveUnitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetWaitForReceiveUnitRequest_default_instance_;
    new (ptr) ::ambr::rpc::GetWaitForReceiveUnitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetWaitForReceiveUnitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetWaitForReceiveUnitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetWaitForReceiveUnitRequest}, {}};

static void InitDefaultsGetWaitForReceiveUnitReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetWaitForReceiveUnitReply_default_instance_;
    new (ptr) ::ambr::rpc::GetWaitForReceiveUnitReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetWaitForReceiveUnitReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetWaitForReceiveUnitReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetWaitForReceiveUnitReply}, {
      &protobuf_rpc_2eproto::scc_info_WaitForReceiveItem.base,}};

static void InitDefaultsGetBalanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetBalanceRequest_default_instance_;
    new (ptr) ::ambr::rpc::GetBalanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetBalanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceRequest}, {}};

static void InitDefaultsGetBalanceReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetBalanceReply_default_instance_;
    new (ptr) ::ambr::rpc::GetBalanceReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetBalanceReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceReply}, {}};

static void InitDefaultsHistoryItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_HistoryItem_default_instance_;
    new (ptr) ::ambr::rpc::HistoryItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::HistoryItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HistoryItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHistoryItem}, {}};

static void InitDefaultsGetHistoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetHistoryRequest_default_instance_;
    new (ptr) ::ambr::rpc::GetHistoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetHistoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetHistoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetHistoryRequest}, {}};

static void InitDefaultsGetHistoryReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetHistoryReply_default_instance_;
    new (ptr) ::ambr::rpc::GetHistoryReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetHistoryReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetHistoryReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetHistoryReply}, {
      &protobuf_rpc_2eproto::scc_info_HistoryItem.base,}};

static void InitDefaultsSendMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_SendMessageRequest_default_instance_;
    new (ptr) ::ambr::rpc::SendMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::SendMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendMessageRequest}, {}};

static void InitDefaultsSendMessageReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_SendMessageReply_default_instance_;
    new (ptr) ::ambr::rpc::SendMessageReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::SendMessageReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendMessageReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendMessageReply}, {}};

static void InitDefaultsGetLastUnitHashRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetLastUnitHashRequest_default_instance_;
    new (ptr) ::ambr::rpc::GetLastUnitHashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetLastUnitHashRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetLastUnitHashRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetLastUnitHashRequest}, {}};

static void InitDefaultsGetLastUnitHashReplay() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_GetLastUnitHashReplay_default_instance_;
    new (ptr) ::ambr::rpc::GetLastUnitHashReplay();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::GetLastUnitHashReplay::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetLastUnitHashReplay =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetLastUnitHashReplay}, {}};

static void InitDefaultsMessageStreamRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_MessageStreamRequest_default_instance_;
    new (ptr) ::ambr::rpc::MessageStreamRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::MessageStreamRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageStreamRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageStreamRequest}, {}};

static void InitDefaultsMessageStreamReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_MessageStreamReply_default_instance_;
    new (ptr) ::ambr::rpc::MessageStreamReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::MessageStreamReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageStreamReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageStreamReply}, {}};

static void InitDefaultsPubSendTransfRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubSendTransfRequest_default_instance_;
    new (ptr) ::ambr::rpc::PubSendTransfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubSendTransfRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubSendTransfRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubSendTransfRequest}, {}};

static void InitDefaultsPubSendTransfReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubSendTransfReply_default_instance_;
    new (ptr) ::ambr::rpc::PubSendTransfReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubSendTransfReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubSendTransfReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubSendTransfReply}, {}};

static void InitDefaultsPubReceiveTransfRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubReceiveTransfRequest_default_instance_;
    new (ptr) ::ambr::rpc::PubReceiveTransfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubReceiveTransfRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubReceiveTransfRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubReceiveTransfRequest}, {}};

static void InitDefaultsPubReceiveTransfReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubReceiveTransfReply_default_instance_;
    new (ptr) ::ambr::rpc::PubReceiveTransfReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubReceiveTransfReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubReceiveTransfReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubReceiveTransfReply}, {}};

static void InitDefaultsPubSendMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubSendMessageRequest_default_instance_;
    new (ptr) ::ambr::rpc::PubSendMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubSendMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubSendMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubSendMessageRequest}, {}};

static void InitDefaultsPubSendMessageReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ambr::rpc::_PubSendMessageReply_default_instance_;
    new (ptr) ::ambr::rpc::PubSendMessageReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ambr::rpc::PubSendMessageReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PubSendMessageReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPubSendMessageReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AddUnitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddUnitReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForReceiveItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetWaitForReceiveUnitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetWaitForReceiveUnitReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HistoryItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetHistoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetHistoryReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendMessageReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetLastUnitHashRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetLastUnitHashReplay.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageStreamRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageStreamReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubSendTransfRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubSendTransfReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubReceiveTransfRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubReceiveTransfReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubSendMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PubSendMessageReply.base);
}

::google::protobuf::Metadata file_level_metadata[22];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::AddUnitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::AddUnitRequest, json_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::AddUnitReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::AddUnitReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::AddUnitReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::WaitForReceiveItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::WaitForReceiveItem, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::WaitForReceiveItem, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetWaitForReceiveUnitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetWaitForReceiveUnitRequest, public_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetWaitForReceiveUnitReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetWaitForReceiveUnitReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetWaitForReceiveUnitReply, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceRequest, public_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceReply, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetBalanceReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::HistoryItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::HistoryItem, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::HistoryItem, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryRequest, public_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryReply, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetHistoryReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::SendMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::SendMessageRequest, json_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::SendMessageReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::SendMessageReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::SendMessageReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashRequest, public_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashReplay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashReplay, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashReplay, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::GetLastUnitHashReplay, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::MessageStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::MessageStreamReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::MessageStreamReply, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::MessageStreamReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfRequest, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfRequest, dest_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfRequest, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendTransfReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfRequest, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfRequest, from_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubReceiveTransfReply, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageRequest, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ambr::rpc::PubSendMessageReply, error_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ambr::rpc::AddUnitRequest)},
  { 6, -1, sizeof(::ambr::rpc::AddUnitReply)},
  { 13, -1, sizeof(::ambr::rpc::WaitForReceiveItem)},
  { 20, -1, sizeof(::ambr::rpc::GetWaitForReceiveUnitRequest)},
  { 26, -1, sizeof(::ambr::rpc::GetWaitForReceiveUnitReply)},
  { 33, -1, sizeof(::ambr::rpc::GetBalanceRequest)},
  { 39, -1, sizeof(::ambr::rpc::GetBalanceReply)},
  { 47, -1, sizeof(::ambr::rpc::HistoryItem)},
  { 54, -1, sizeof(::ambr::rpc::GetHistoryRequest)},
  { 60, -1, sizeof(::ambr::rpc::GetHistoryReply)},
  { 68, -1, sizeof(::ambr::rpc::SendMessageRequest)},
  { 74, -1, sizeof(::ambr::rpc::SendMessageReply)},
  { 81, -1, sizeof(::ambr::rpc::GetLastUnitHashRequest)},
  { 87, -1, sizeof(::ambr::rpc::GetLastUnitHashReplay)},
  { 95, -1, sizeof(::ambr::rpc::MessageStreamRequest)},
  { 100, -1, sizeof(::ambr::rpc::MessageStreamReply)},
  { 107, -1, sizeof(::ambr::rpc::PubSendTransfRequest)},
  { 115, -1, sizeof(::ambr::rpc::PubSendTransfReply)},
  { 122, -1, sizeof(::ambr::rpc::PubReceiveTransfRequest)},
  { 129, -1, sizeof(::ambr::rpc::PubReceiveTransfReply)},
  { 136, -1, sizeof(::ambr::rpc::PubSendMessageRequest)},
  { 143, -1, sizeof(::ambr::rpc::PubSendMessageReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_AddUnitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_AddUnitReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_WaitForReceiveItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetWaitForReceiveUnitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetWaitForReceiveUnitReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetBalanceReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_HistoryItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetHistoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetHistoryReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_SendMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_SendMessageReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetLastUnitHashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_GetLastUnitHashReplay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_MessageStreamRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_MessageStreamReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubSendTransfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubSendTransfReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubReceiveTransfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubReceiveTransfReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubSendMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ambr::rpc::_PubSendMessageReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trpc.proto\022\010ambr.rpc\"\036\n\016AddUnitRequest\022"
      "\014\n\004json\030\001 \001(\t\"5\n\014AddUnitReply\022\016\n\006result\030"
      "\001 \001(\010\022\025\n\rerror_message\030\002 \001(\t\"2\n\022WaitForR"
      "eceiveItem\022\014\n\004hash\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t"
      "\"2\n\034GetWaitForReceiveUnitRequest\022\022\n\npubl"
      "ic_key\030\001 \001(\t\"Y\n\032GetWaitForReceiveUnitRep"
      "ly\022\016\n\006result\030\001 \001(\010\022+\n\005items\030\002 \003(\0132\034.ambr"
      ".rpc.WaitForReceiveItem\"\'\n\021GetBalanceReq"
      "uest\022\022\n\npublic_key\030\001 \001(\t\"H\n\017GetBalanceRe"
      "ply\022\016\n\006result\030\001 \001(\010\022\016\n\006amount\030\002 \001(\t\022\025\n\re"
      "rror_message\030\003 \001(\t\"+\n\013HistoryItem\022\014\n\004typ"
      "e\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\"\'\n\021GetHistoryReq"
      "uest\022\022\n\npublic_key\030\001 \001(\t\"^\n\017GetHistoryRe"
      "ply\022\016\n\006result\030\001 \001(\010\022$\n\005items\030\002 \003(\0132\025.amb"
      "r.rpc.HistoryItem\022\025\n\rerror_message\030\003 \001(\t"
      "\"\"\n\022SendMessageRequest\022\014\n\004json\030\001 \001(\t\"9\n\020"
      "SendMessageReply\022\016\n\006result\030\001 \001(\010\022\025\n\rerro"
      "r_message\030\002 \001(\t\",\n\026GetLastUnitHashReques"
      "t\022\022\n\npublic_key\030\001 \001(\t\"L\n\025GetLastUnitHash"
      "Replay\022\016\n\006result\030\001 \001(\010\022\014\n\004hash\030\002 \001(\t\022\025\n\r"
      "error_message\030\003 \001(\t\"\026\n\024MessageStreamRequ"
      "est\"9\n\022MessageStreamReply\022\022\n\npublic_key\030"
      "\001 \001(\t\022\017\n\007message\030\002 \001(\t\"P\n\024PubSendTransfR"
      "equest\022\023\n\013private_key\030\001 \001(\t\022\023\n\013dest_publ"
      "ic\030\002 \001(\t\022\016\n\006amount\030\003 \001(\t\";\n\022PubSendTrans"
      "fReply\022\016\n\006result\030\001 \001(\010\022\025\n\rerror_message\030"
      "\002 \001(\t\"A\n\027PubReceiveTransfRequest\022\023\n\013priv"
      "ate_key\030\001 \001(\t\022\021\n\tfrom_hash\030\002 \001(\t\">\n\025PubR"
      "eceiveTransfReply\022\016\n\006result\030\001 \001(\010\022\025\n\rerr"
      "or_message\030\002 \001(\t\"=\n\025PubSendMessageReques"
      "t\022\023\n\013private_key\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\""
      "<\n\023PubSendMessageReply\022\016\n\006result\030\001 \001(\010\022\025"
      "\n\rerror_message\030\002 \001(\t2\224\007\n\014RpcInterface\022G"
      "\n\021AddSendUnitByJson\022\030.ambr.rpc.AddUnitRe"
      "quest\032\026.ambr.rpc.AddUnitReply\"\000\022J\n\024AddRe"
      "ceiveUnitByJson\022\030.ambr.rpc.AddUnitReques"
      "t\032\026.ambr.rpc.AddUnitReply\"\000\022g\n\025GetWaitFo"
      "rReceiveUnit\022&.ambr.rpc.GetWaitForReceiv"
      "eUnitRequest\032$.ambr.rpc.GetWaitForReceiv"
      "eUnitReply\"\000\022F\n\nGetBalance\022\033.ambr.rpc.Ge"
      "tBalanceRequest\032\031.ambr.rpc.GetBalanceRep"
      "ly\"\000\022F\n\nGetHistory\022\033.ambr.rpc.GetHistory"
      "Request\032\031.ambr.rpc.GetHistoryReply\"\000\022I\n\013"
      "SendMessage\022\034.ambr.rpc.SendMessageReques"
      "t\032\032.ambr.rpc.SendMessageReply\"\000\022T\n\020GetMe"
      "ssageStream\022\036.ambr.rpc.MessageStreamRequ"
      "est\032\034.ambr.rpc.MessageStreamReply\"\0000\001\022V\n"
      "\017GetLastUnitHash\022 .ambr.rpc.GetLastUnitH"
      "ashRequest\032\037.ambr.rpc.GetLastUnitHashRep"
      "lay\"\000\022O\n\rPubSendTransf\022\036.ambr.rpc.PubSen"
      "dTransfRequest\032\034.ambr.rpc.PubSendTransfR"
      "eply\"\000\022X\n\020PubReceiveTransf\022!.ambr.rpc.Pu"
      "bReceiveTransfRequest\032\037.ambr.rpc.PubRece"
      "iveTransfReply\"\000\022R\n\016PubSendMessage\022\037.amb"
      "r.rpc.PubSendMessageRequest\032\035.ambr.rpc.P"
      "ubSendMessageReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_2eproto
namespace ambr {
namespace rpc {

// ===================================================================

void AddUnitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUnitRequest::kJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUnitRequest::AddUnitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_AddUnitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.AddUnitRequest)
}
AddUnitRequest::AddUnitRequest(const AddUnitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.AddUnitRequest)
}

void AddUnitRequest::SharedCtor() {
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddUnitRequest::~AddUnitRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.AddUnitRequest)
  SharedDtor();
}

void AddUnitRequest::SharedDtor() {
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddUnitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUnitRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUnitRequest& AddUnitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_AddUnitRequest.base);
  return *internal_default_instance();
}


void AddUnitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.AddUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AddUnitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.AddUnitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string json = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), static_cast<int>(this->json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.AddUnitRequest.json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.AddUnitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.AddUnitRequest)
  return false;
#undef DO_
}

void AddUnitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.AddUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.AddUnitRequest.json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.AddUnitRequest)
}

::google::protobuf::uint8* AddUnitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.AddUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.AddUnitRequest.json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.AddUnitRequest)
  return target;
}

size_t AddUnitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.AddUnitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string json = 1;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUnitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.AddUnitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUnitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUnitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.AddUnitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.AddUnitRequest)
    MergeFrom(*source);
  }
}

void AddUnitRequest::MergeFrom(const AddUnitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.AddUnitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
}

void AddUnitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.AddUnitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUnitRequest::CopyFrom(const AddUnitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.AddUnitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUnitRequest::IsInitialized() const {
  return true;
}

void AddUnitRequest::Swap(AddUnitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUnitRequest::InternalSwap(AddUnitRequest* other) {
  using std::swap;
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUnitRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddUnitReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUnitReply::kResultFieldNumber;
const int AddUnitReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUnitReply::AddUnitReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_AddUnitReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.AddUnitReply)
}
AddUnitReply::AddUnitReply(const AddUnitReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.AddUnitReply)
}

void AddUnitReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

AddUnitReply::~AddUnitReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.AddUnitReply)
  SharedDtor();
}

void AddUnitReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddUnitReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUnitReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUnitReply& AddUnitReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_AddUnitReply.base);
  return *internal_default_instance();
}


void AddUnitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.AddUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool AddUnitReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.AddUnitReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.AddUnitReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.AddUnitReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.AddUnitReply)
  return false;
#undef DO_
}

void AddUnitReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.AddUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.AddUnitReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.AddUnitReply)
}

::google::protobuf::uint8* AddUnitReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.AddUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.AddUnitReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.AddUnitReply)
  return target;
}

size_t AddUnitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.AddUnitReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUnitReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.AddUnitReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUnitReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUnitReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.AddUnitReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.AddUnitReply)
    MergeFrom(*source);
  }
}

void AddUnitReply::MergeFrom(const AddUnitReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.AddUnitReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AddUnitReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.AddUnitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUnitReply::CopyFrom(const AddUnitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.AddUnitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUnitReply::IsInitialized() const {
  return true;
}

void AddUnitReply::Swap(AddUnitReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUnitReply::InternalSwap(AddUnitReply* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUnitReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitForReceiveItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForReceiveItem::kHashFieldNumber;
const int WaitForReceiveItem::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForReceiveItem::WaitForReceiveItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_WaitForReceiveItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.WaitForReceiveItem)
}
WaitForReceiveItem::WaitForReceiveItem(const WaitForReceiveItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.WaitForReceiveItem)
}

void WaitForReceiveItem::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WaitForReceiveItem::~WaitForReceiveItem() {
  // @@protoc_insertion_point(destructor:ambr.rpc.WaitForReceiveItem)
  SharedDtor();
}

void WaitForReceiveItem::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WaitForReceiveItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitForReceiveItem::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitForReceiveItem& WaitForReceiveItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_WaitForReceiveItem.base);
  return *internal_default_instance();
}


void WaitForReceiveItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.WaitForReceiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WaitForReceiveItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.WaitForReceiveItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.WaitForReceiveItem.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.WaitForReceiveItem.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.WaitForReceiveItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.WaitForReceiveItem)
  return false;
#undef DO_
}

void WaitForReceiveItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.WaitForReceiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.WaitForReceiveItem.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.WaitForReceiveItem.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.WaitForReceiveItem)
}

::google::protobuf::uint8* WaitForReceiveItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.WaitForReceiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.WaitForReceiveItem.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.WaitForReceiveItem.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.WaitForReceiveItem)
  return target;
}

size_t WaitForReceiveItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.WaitForReceiveItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForReceiveItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.WaitForReceiveItem)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForReceiveItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitForReceiveItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.WaitForReceiveItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.WaitForReceiveItem)
    MergeFrom(*source);
  }
}

void WaitForReceiveItem::MergeFrom(const WaitForReceiveItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.WaitForReceiveItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
}

void WaitForReceiveItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.WaitForReceiveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForReceiveItem::CopyFrom(const WaitForReceiveItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.WaitForReceiveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForReceiveItem::IsInitialized() const {
  return true;
}

void WaitForReceiveItem::Swap(WaitForReceiveItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForReceiveItem::InternalSwap(WaitForReceiveItem* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitForReceiveItem::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWaitForReceiveUnitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWaitForReceiveUnitRequest::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWaitForReceiveUnitRequest::GetWaitForReceiveUnitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetWaitForReceiveUnitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetWaitForReceiveUnitRequest)
}
GetWaitForReceiveUnitRequest::GetWaitForReceiveUnitRequest(const GetWaitForReceiveUnitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetWaitForReceiveUnitRequest)
}

void GetWaitForReceiveUnitRequest::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetWaitForReceiveUnitRequest::~GetWaitForReceiveUnitRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetWaitForReceiveUnitRequest)
  SharedDtor();
}

void GetWaitForReceiveUnitRequest::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetWaitForReceiveUnitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetWaitForReceiveUnitRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWaitForReceiveUnitRequest& GetWaitForReceiveUnitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetWaitForReceiveUnitRequest.base);
  return *internal_default_instance();
}


void GetWaitForReceiveUnitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetWaitForReceiveUnitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetWaitForReceiveUnitRequest.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetWaitForReceiveUnitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetWaitForReceiveUnitRequest)
  return false;
#undef DO_
}

void GetWaitForReceiveUnitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetWaitForReceiveUnitRequest.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetWaitForReceiveUnitRequest)
}

::google::protobuf::uint8* GetWaitForReceiveUnitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetWaitForReceiveUnitRequest.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetWaitForReceiveUnitRequest)
  return target;
}

size_t GetWaitForReceiveUnitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWaitForReceiveUnitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWaitForReceiveUnitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWaitForReceiveUnitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetWaitForReceiveUnitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetWaitForReceiveUnitRequest)
    MergeFrom(*source);
  }
}

void GetWaitForReceiveUnitRequest::MergeFrom(const GetWaitForReceiveUnitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void GetWaitForReceiveUnitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWaitForReceiveUnitRequest::CopyFrom(const GetWaitForReceiveUnitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetWaitForReceiveUnitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWaitForReceiveUnitRequest::IsInitialized() const {
  return true;
}

void GetWaitForReceiveUnitRequest::Swap(GetWaitForReceiveUnitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWaitForReceiveUnitRequest::InternalSwap(GetWaitForReceiveUnitRequest* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetWaitForReceiveUnitRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWaitForReceiveUnitReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWaitForReceiveUnitReply::kResultFieldNumber;
const int GetWaitForReceiveUnitReply::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWaitForReceiveUnitReply::GetWaitForReceiveUnitReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetWaitForReceiveUnitReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetWaitForReceiveUnitReply)
}
GetWaitForReceiveUnitReply::GetWaitForReceiveUnitReply(const GetWaitForReceiveUnitReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetWaitForReceiveUnitReply)
}

void GetWaitForReceiveUnitReply::SharedCtor() {
  result_ = false;
}

GetWaitForReceiveUnitReply::~GetWaitForReceiveUnitReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetWaitForReceiveUnitReply)
  SharedDtor();
}

void GetWaitForReceiveUnitReply::SharedDtor() {
}

void GetWaitForReceiveUnitReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetWaitForReceiveUnitReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWaitForReceiveUnitReply& GetWaitForReceiveUnitReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetWaitForReceiveUnitReply.base);
  return *internal_default_instance();
}


void GetWaitForReceiveUnitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetWaitForReceiveUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  result_ = false;
  _internal_metadata_.Clear();
}

bool GetWaitForReceiveUnitReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetWaitForReceiveUnitReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ambr.rpc.WaitForReceiveItem items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetWaitForReceiveUnitReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetWaitForReceiveUnitReply)
  return false;
#undef DO_
}

void GetWaitForReceiveUnitReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetWaitForReceiveUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // repeated .ambr.rpc.WaitForReceiveItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetWaitForReceiveUnitReply)
}

::google::protobuf::uint8* GetWaitForReceiveUnitReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetWaitForReceiveUnitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // repeated .ambr.rpc.WaitForReceiveItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetWaitForReceiveUnitReply)
  return target;
}

size_t GetWaitForReceiveUnitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetWaitForReceiveUnitReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ambr.rpc.WaitForReceiveItem items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWaitForReceiveUnitReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetWaitForReceiveUnitReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWaitForReceiveUnitReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWaitForReceiveUnitReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetWaitForReceiveUnitReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetWaitForReceiveUnitReply)
    MergeFrom(*source);
  }
}

void GetWaitForReceiveUnitReply::MergeFrom(const GetWaitForReceiveUnitReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetWaitForReceiveUnitReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void GetWaitForReceiveUnitReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetWaitForReceiveUnitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWaitForReceiveUnitReply::CopyFrom(const GetWaitForReceiveUnitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetWaitForReceiveUnitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWaitForReceiveUnitReply::IsInitialized() const {
  return true;
}

void GetWaitForReceiveUnitReply::Swap(GetWaitForReceiveUnitReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWaitForReceiveUnitReply::InternalSwap(GetWaitForReceiveUnitReply* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetWaitForReceiveUnitReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceRequest::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceRequest::GetBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetBalanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetBalanceRequest)
}
GetBalanceRequest::GetBalanceRequest(const GetBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetBalanceRequest)
}

void GetBalanceRequest::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBalanceRequest::~GetBalanceRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetBalanceRequest)
  SharedDtor();
}

void GetBalanceRequest::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBalanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceRequest& GetBalanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetBalanceRequest.base);
  return *internal_default_instance();
}


void GetBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetBalanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetBalanceRequest.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetBalanceRequest)
  return false;
#undef DO_
}

void GetBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceRequest.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetBalanceRequest)
}

::google::protobuf::uint8* GetBalanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceRequest.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetBalanceRequest)
  return target;
}

size_t GetBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetBalanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetBalanceRequest)
    MergeFrom(*source);
  }
}

void GetBalanceRequest::MergeFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void GetBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceRequest::CopyFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceRequest::IsInitialized() const {
  return true;
}

void GetBalanceRequest::Swap(GetBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceRequest::InternalSwap(GetBalanceRequest* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceReply::kResultFieldNumber;
const int GetBalanceReply::kAmountFieldNumber;
const int GetBalanceReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceReply::GetBalanceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetBalanceReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetBalanceReply)
}
GetBalanceReply::GetBalanceReply(const GetBalanceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetBalanceReply)
}

void GetBalanceReply::SharedCtor() {
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

GetBalanceReply::~GetBalanceReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetBalanceReply)
  SharedDtor();
}

void GetBalanceReply::SharedDtor() {
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBalanceReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceReply& GetBalanceReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetBalanceReply.base);
  return *internal_default_instance();
}


void GetBalanceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetBalanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool GetBalanceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetBalanceReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetBalanceReply.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetBalanceReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetBalanceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetBalanceReply)
  return false;
#undef DO_
}

void GetBalanceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetBalanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceReply.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amount(), output);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetBalanceReply)
}

::google::protobuf::uint8* GetBalanceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetBalanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceReply.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amount(), target);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetBalanceReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetBalanceReply)
  return target;
}

size_t GetBalanceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetBalanceReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetBalanceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetBalanceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetBalanceReply)
    MergeFrom(*source);
  }
}

void GetBalanceReply::MergeFrom(const GetBalanceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetBalanceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void GetBalanceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetBalanceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceReply::CopyFrom(const GetBalanceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetBalanceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceReply::IsInitialized() const {
  return true;
}

void GetBalanceReply::Swap(GetBalanceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceReply::InternalSwap(GetBalanceReply* other) {
  using std::swap;
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HistoryItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryItem::kTypeFieldNumber;
const int HistoryItem::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryItem::HistoryItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_HistoryItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.HistoryItem)
}
HistoryItem::HistoryItem(const HistoryItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.HistoryItem)
}

void HistoryItem::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HistoryItem::~HistoryItem() {
  // @@protoc_insertion_point(destructor:ambr.rpc.HistoryItem)
  SharedDtor();
}

void HistoryItem::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HistoryItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HistoryItem::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HistoryItem& HistoryItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_HistoryItem.base);
  return *internal_default_instance();
}


void HistoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.HistoryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HistoryItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.HistoryItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.HistoryItem.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.HistoryItem.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.HistoryItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.HistoryItem)
  return false;
#undef DO_
}

void HistoryItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.HistoryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.HistoryItem.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.HistoryItem.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.HistoryItem)
}

::google::protobuf::uint8* HistoryItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.HistoryItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.HistoryItem.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.HistoryItem.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.HistoryItem)
  return target;
}

size_t HistoryItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.HistoryItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HistoryItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.HistoryItem)
  GOOGLE_DCHECK_NE(&from, this);
  const HistoryItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HistoryItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.HistoryItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.HistoryItem)
    MergeFrom(*source);
  }
}

void HistoryItem::MergeFrom(const HistoryItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.HistoryItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
}

void HistoryItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.HistoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryItem::CopyFrom(const HistoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.HistoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryItem::IsInitialized() const {
  return true;
}

void HistoryItem::Swap(HistoryItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryItem::InternalSwap(HistoryItem* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HistoryItem::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetHistoryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetHistoryRequest::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetHistoryRequest::GetHistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetHistoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetHistoryRequest)
}
GetHistoryRequest::GetHistoryRequest(const GetHistoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetHistoryRequest)
}

void GetHistoryRequest::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetHistoryRequest::~GetHistoryRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetHistoryRequest)
  SharedDtor();
}

void GetHistoryRequest::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetHistoryRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetHistoryRequest& GetHistoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetHistoryRequest.base);
  return *internal_default_instance();
}


void GetHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetHistoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetHistoryRequest.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetHistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetHistoryRequest)
  return false;
#undef DO_
}

void GetHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetHistoryRequest.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetHistoryRequest)
}

::google::protobuf::uint8* GetHistoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetHistoryRequest.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetHistoryRequest)
  return target;
}

size_t GetHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetHistoryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHistoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetHistoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetHistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetHistoryRequest)
    MergeFrom(*source);
  }
}

void GetHistoryRequest::MergeFrom(const GetHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void GetHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHistoryRequest::CopyFrom(const GetHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHistoryRequest::IsInitialized() const {
  return true;
}

void GetHistoryRequest::Swap(GetHistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetHistoryRequest::InternalSwap(GetHistoryRequest* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetHistoryRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetHistoryReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetHistoryReply::kResultFieldNumber;
const int GetHistoryReply::kItemsFieldNumber;
const int GetHistoryReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetHistoryReply::GetHistoryReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetHistoryReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetHistoryReply)
}
GetHistoryReply::GetHistoryReply(const GetHistoryReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetHistoryReply)
}

void GetHistoryReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

GetHistoryReply::~GetHistoryReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetHistoryReply)
  SharedDtor();
}

void GetHistoryReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetHistoryReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetHistoryReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetHistoryReply& GetHistoryReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetHistoryReply.base);
  return *internal_default_instance();
}


void GetHistoryReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetHistoryReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool GetHistoryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetHistoryReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ambr.rpc.HistoryItem items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetHistoryReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetHistoryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetHistoryReply)
  return false;
#undef DO_
}

void GetHistoryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetHistoryReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // repeated .ambr.rpc.HistoryItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetHistoryReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetHistoryReply)
}

::google::protobuf::uint8* GetHistoryReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetHistoryReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // repeated .ambr.rpc.HistoryItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetHistoryReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetHistoryReply)
  return target;
}

size_t GetHistoryReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetHistoryReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ambr.rpc.HistoryItem items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHistoryReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetHistoryReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHistoryReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetHistoryReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetHistoryReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetHistoryReply)
    MergeFrom(*source);
  }
}

void GetHistoryReply::MergeFrom(const GetHistoryReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetHistoryReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void GetHistoryReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetHistoryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHistoryReply::CopyFrom(const GetHistoryReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetHistoryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHistoryReply::IsInitialized() const {
  return true;
}

void GetHistoryReply::Swap(GetHistoryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetHistoryReply::InternalSwap(GetHistoryReply* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetHistoryReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessageRequest::kJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessageRequest::SendMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_SendMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.SendMessageRequest)
}
SendMessageRequest::SendMessageRequest(const SendMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.SendMessageRequest)
}

void SendMessageRequest::SharedCtor() {
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendMessageRequest::~SendMessageRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.SendMessageRequest)
  SharedDtor();
}

void SendMessageRequest::SharedDtor() {
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendMessageRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMessageRequest& SendMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_SendMessageRequest.base);
  return *internal_default_instance();
}


void SendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.SendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.SendMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string json = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), static_cast<int>(this->json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.SendMessageRequest.json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.SendMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.SendMessageRequest)
  return false;
#undef DO_
}

void SendMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.SendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.SendMessageRequest.json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.SendMessageRequest)
}

::google::protobuf::uint8* SendMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.SendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.SendMessageRequest.json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.SendMessageRequest)
  return target;
}

size_t SendMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.SendMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string json = 1;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.SendMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.SendMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.SendMessageRequest)
    MergeFrom(*source);
  }
}

void SendMessageRequest::MergeFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.SendMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
}

void SendMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMessageRequest::CopyFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageRequest::IsInitialized() const {
  return true;
}

void SendMessageRequest::Swap(SendMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessageRequest::InternalSwap(SendMessageRequest* other) {
  using std::swap;
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendMessageRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendMessageReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessageReply::kResultFieldNumber;
const int SendMessageReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessageReply::SendMessageReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_SendMessageReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.SendMessageReply)
}
SendMessageReply::SendMessageReply(const SendMessageReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.SendMessageReply)
}

void SendMessageReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

SendMessageReply::~SendMessageReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.SendMessageReply)
  SharedDtor();
}

void SendMessageReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMessageReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendMessageReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMessageReply& SendMessageReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_SendMessageReply.base);
  return *internal_default_instance();
}


void SendMessageReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.SendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool SendMessageReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.SendMessageReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.SendMessageReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.SendMessageReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.SendMessageReply)
  return false;
#undef DO_
}

void SendMessageReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.SendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.SendMessageReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.SendMessageReply)
}

::google::protobuf::uint8* SendMessageReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.SendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.SendMessageReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.SendMessageReply)
  return target;
}

size_t SendMessageReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.SendMessageReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendMessageReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.SendMessageReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMessageReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMessageReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.SendMessageReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.SendMessageReply)
    MergeFrom(*source);
  }
}

void SendMessageReply::MergeFrom(const SendMessageReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.SendMessageReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void SendMessageReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.SendMessageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMessageReply::CopyFrom(const SendMessageReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.SendMessageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageReply::IsInitialized() const {
  return true;
}

void SendMessageReply::Swap(SendMessageReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessageReply::InternalSwap(SendMessageReply* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendMessageReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLastUnitHashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLastUnitHashRequest::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLastUnitHashRequest::GetLastUnitHashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetLastUnitHashRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetLastUnitHashRequest)
}
GetLastUnitHashRequest::GetLastUnitHashRequest(const GetLastUnitHashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetLastUnitHashRequest)
}

void GetLastUnitHashRequest::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetLastUnitHashRequest::~GetLastUnitHashRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetLastUnitHashRequest)
  SharedDtor();
}

void GetLastUnitHashRequest::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLastUnitHashRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetLastUnitHashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLastUnitHashRequest& GetLastUnitHashRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetLastUnitHashRequest.base);
  return *internal_default_instance();
}


void GetLastUnitHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetLastUnitHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetLastUnitHashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetLastUnitHashRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetLastUnitHashRequest.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetLastUnitHashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetLastUnitHashRequest)
  return false;
#undef DO_
}

void GetLastUnitHashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetLastUnitHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashRequest.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetLastUnitHashRequest)
}

::google::protobuf::uint8* GetLastUnitHashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetLastUnitHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashRequest.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetLastUnitHashRequest)
  return target;
}

size_t GetLastUnitHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetLastUnitHashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLastUnitHashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetLastUnitHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastUnitHashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLastUnitHashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetLastUnitHashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetLastUnitHashRequest)
    MergeFrom(*source);
  }
}

void GetLastUnitHashRequest::MergeFrom(const GetLastUnitHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetLastUnitHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void GetLastUnitHashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetLastUnitHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastUnitHashRequest::CopyFrom(const GetLastUnitHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetLastUnitHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastUnitHashRequest::IsInitialized() const {
  return true;
}

void GetLastUnitHashRequest::Swap(GetLastUnitHashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLastUnitHashRequest::InternalSwap(GetLastUnitHashRequest* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetLastUnitHashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLastUnitHashReplay::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLastUnitHashReplay::kResultFieldNumber;
const int GetLastUnitHashReplay::kHashFieldNumber;
const int GetLastUnitHashReplay::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLastUnitHashReplay::GetLastUnitHashReplay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_GetLastUnitHashReplay.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.GetLastUnitHashReplay)
}
GetLastUnitHashReplay::GetLastUnitHashReplay(const GetLastUnitHashReplay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.GetLastUnitHashReplay)
}

void GetLastUnitHashReplay::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

GetLastUnitHashReplay::~GetLastUnitHashReplay() {
  // @@protoc_insertion_point(destructor:ambr.rpc.GetLastUnitHashReplay)
  SharedDtor();
}

void GetLastUnitHashReplay::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLastUnitHashReplay::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetLastUnitHashReplay::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLastUnitHashReplay& GetLastUnitHashReplay::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_GetLastUnitHashReplay.base);
  return *internal_default_instance();
}


void GetLastUnitHashReplay::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.GetLastUnitHashReplay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool GetLastUnitHashReplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.GetLastUnitHashReplay)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetLastUnitHashReplay.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.GetLastUnitHashReplay.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.GetLastUnitHashReplay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.GetLastUnitHashReplay)
  return false;
#undef DO_
}

void GetLastUnitHashReplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.GetLastUnitHashReplay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashReplay.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hash(), output);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashReplay.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.GetLastUnitHashReplay)
}

::google::protobuf::uint8* GetLastUnitHashReplay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.GetLastUnitHashReplay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashReplay.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hash(), target);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.GetLastUnitHashReplay.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.GetLastUnitHashReplay)
  return target;
}

size_t GetLastUnitHashReplay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.GetLastUnitHashReplay)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 2;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLastUnitHashReplay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.GetLastUnitHashReplay)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastUnitHashReplay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLastUnitHashReplay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.GetLastUnitHashReplay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.GetLastUnitHashReplay)
    MergeFrom(*source);
  }
}

void GetLastUnitHashReplay::MergeFrom(const GetLastUnitHashReplay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.GetLastUnitHashReplay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void GetLastUnitHashReplay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.GetLastUnitHashReplay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastUnitHashReplay::CopyFrom(const GetLastUnitHashReplay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.GetLastUnitHashReplay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastUnitHashReplay::IsInitialized() const {
  return true;
}

void GetLastUnitHashReplay::Swap(GetLastUnitHashReplay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLastUnitHashReplay::InternalSwap(GetLastUnitHashReplay* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetLastUnitHashReplay::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageStreamRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageStreamRequest::MessageStreamRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_MessageStreamRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.MessageStreamRequest)
}
MessageStreamRequest::MessageStreamRequest(const MessageStreamRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.MessageStreamRequest)
}

void MessageStreamRequest::SharedCtor() {
}

MessageStreamRequest::~MessageStreamRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.MessageStreamRequest)
  SharedDtor();
}

void MessageStreamRequest::SharedDtor() {
}

void MessageStreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageStreamRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageStreamRequest& MessageStreamRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_MessageStreamRequest.base);
  return *internal_default_instance();
}


void MessageStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.MessageStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessageStreamRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.MessageStreamRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.MessageStreamRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.MessageStreamRequest)
  return false;
#undef DO_
}

void MessageStreamRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.MessageStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.MessageStreamRequest)
}

::google::protobuf::uint8* MessageStreamRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.MessageStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.MessageStreamRequest)
  return target;
}

size_t MessageStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.MessageStreamRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageStreamRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.MessageStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageStreamRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageStreamRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.MessageStreamRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.MessageStreamRequest)
    MergeFrom(*source);
  }
}

void MessageStreamRequest::MergeFrom(const MessageStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.MessageStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageStreamRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.MessageStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStreamRequest::CopyFrom(const MessageStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.MessageStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStreamRequest::IsInitialized() const {
  return true;
}

void MessageStreamRequest::Swap(MessageStreamRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageStreamRequest::InternalSwap(MessageStreamRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageStreamRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageStreamReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageStreamReply::kPublicKeyFieldNumber;
const int MessageStreamReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageStreamReply::MessageStreamReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_MessageStreamReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.MessageStreamReply)
}
MessageStreamReply::MessageStreamReply(const MessageStreamReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.MessageStreamReply)
}

void MessageStreamReply::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageStreamReply::~MessageStreamReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.MessageStreamReply)
  SharedDtor();
}

void MessageStreamReply::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageStreamReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageStreamReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageStreamReply& MessageStreamReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_MessageStreamReply.base);
  return *internal_default_instance();
}


void MessageStreamReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.MessageStreamReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MessageStreamReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.MessageStreamReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.MessageStreamReply.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.MessageStreamReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.MessageStreamReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.MessageStreamReply)
  return false;
#undef DO_
}

void MessageStreamReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.MessageStreamReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.MessageStreamReply.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.MessageStreamReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.MessageStreamReply)
}

::google::protobuf::uint8* MessageStreamReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.MessageStreamReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.MessageStreamReply.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.MessageStreamReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.MessageStreamReply)
  return target;
}

size_t MessageStreamReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.MessageStreamReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageStreamReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.MessageStreamReply)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageStreamReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageStreamReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.MessageStreamReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.MessageStreamReply)
    MergeFrom(*source);
  }
}

void MessageStreamReply::MergeFrom(const MessageStreamReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.MessageStreamReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void MessageStreamReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.MessageStreamReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStreamReply::CopyFrom(const MessageStreamReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.MessageStreamReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStreamReply::IsInitialized() const {
  return true;
}

void MessageStreamReply::Swap(MessageStreamReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageStreamReply::InternalSwap(MessageStreamReply* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageStreamReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubSendTransfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubSendTransfRequest::kPrivateKeyFieldNumber;
const int PubSendTransfRequest::kDestPublicFieldNumber;
const int PubSendTransfRequest::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubSendTransfRequest::PubSendTransfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubSendTransfRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubSendTransfRequest)
}
PubSendTransfRequest::PubSendTransfRequest(const PubSendTransfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  dest_public_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dest_public().size() > 0) {
    dest_public_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_public_);
  }
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubSendTransfRequest)
}

void PubSendTransfRequest::SharedCtor() {
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_public_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PubSendTransfRequest::~PubSendTransfRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubSendTransfRequest)
  SharedDtor();
}

void PubSendTransfRequest::SharedDtor() {
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_public_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubSendTransfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubSendTransfRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubSendTransfRequest& PubSendTransfRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubSendTransfRequest.base);
  return *internal_default_instance();
}


void PubSendTransfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubSendTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_public_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PubSendTransfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubSendTransfRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string private_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_key().data(), static_cast<int>(this->private_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendTransfRequest.private_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dest_public = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_public()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest_public().data(), static_cast<int>(this->dest_public().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendTransfRequest.dest_public"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendTransfRequest.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubSendTransfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubSendTransfRequest)
  return false;
#undef DO_
}

void PubSendTransfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubSendTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.private_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->private_key(), output);
  }

  // string dest_public = 2;
  if (this->dest_public().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_public().data(), static_cast<int>(this->dest_public().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.dest_public");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dest_public(), output);
  }

  // string amount = 3;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubSendTransfRequest)
}

::google::protobuf::uint8* PubSendTransfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubSendTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.private_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->private_key(), target);
  }

  // string dest_public = 2;
  if (this->dest_public().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_public().data(), static_cast<int>(this->dest_public().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.dest_public");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dest_public(), target);
  }

  // string amount = 3;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfRequest.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubSendTransfRequest)
  return target;
}

size_t PubSendTransfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubSendTransfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string private_key = 1;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->private_key());
  }

  // string dest_public = 2;
  if (this->dest_public().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest_public());
  }

  // string amount = 3;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubSendTransfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubSendTransfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PubSendTransfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubSendTransfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubSendTransfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubSendTransfRequest)
    MergeFrom(*source);
  }
}

void PubSendTransfRequest::MergeFrom(const PubSendTransfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubSendTransfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.dest_public().size() > 0) {

    dest_public_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_public_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
}

void PubSendTransfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubSendTransfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubSendTransfRequest::CopyFrom(const PubSendTransfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubSendTransfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubSendTransfRequest::IsInitialized() const {
  return true;
}

void PubSendTransfRequest::Swap(PubSendTransfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubSendTransfRequest::InternalSwap(PubSendTransfRequest* other) {
  using std::swap;
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dest_public_.Swap(&other->dest_public_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubSendTransfRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubSendTransfReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubSendTransfReply::kResultFieldNumber;
const int PubSendTransfReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubSendTransfReply::PubSendTransfReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubSendTransfReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubSendTransfReply)
}
PubSendTransfReply::PubSendTransfReply(const PubSendTransfReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubSendTransfReply)
}

void PubSendTransfReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

PubSendTransfReply::~PubSendTransfReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubSendTransfReply)
  SharedDtor();
}

void PubSendTransfReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubSendTransfReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubSendTransfReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubSendTransfReply& PubSendTransfReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubSendTransfReply.base);
  return *internal_default_instance();
}


void PubSendTransfReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubSendTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool PubSendTransfReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubSendTransfReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendTransfReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubSendTransfReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubSendTransfReply)
  return false;
#undef DO_
}

void PubSendTransfReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubSendTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubSendTransfReply)
}

::google::protobuf::uint8* PubSendTransfReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubSendTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendTransfReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubSendTransfReply)
  return target;
}

size_t PubSendTransfReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubSendTransfReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubSendTransfReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubSendTransfReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PubSendTransfReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubSendTransfReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubSendTransfReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubSendTransfReply)
    MergeFrom(*source);
  }
}

void PubSendTransfReply::MergeFrom(const PubSendTransfReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubSendTransfReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PubSendTransfReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubSendTransfReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubSendTransfReply::CopyFrom(const PubSendTransfReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubSendTransfReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubSendTransfReply::IsInitialized() const {
  return true;
}

void PubSendTransfReply::Swap(PubSendTransfReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubSendTransfReply::InternalSwap(PubSendTransfReply* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubSendTransfReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubReceiveTransfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubReceiveTransfRequest::kPrivateKeyFieldNumber;
const int PubReceiveTransfRequest::kFromHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubReceiveTransfRequest::PubReceiveTransfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubReceiveTransfRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubReceiveTransfRequest)
}
PubReceiveTransfRequest::PubReceiveTransfRequest(const PubReceiveTransfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  from_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_hash().size() > 0) {
    from_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubReceiveTransfRequest)
}

void PubReceiveTransfRequest::SharedCtor() {
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PubReceiveTransfRequest::~PubReceiveTransfRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubReceiveTransfRequest)
  SharedDtor();
}

void PubReceiveTransfRequest::SharedDtor() {
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubReceiveTransfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubReceiveTransfRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubReceiveTransfRequest& PubReceiveTransfRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubReceiveTransfRequest.base);
  return *internal_default_instance();
}


void PubReceiveTransfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubReceiveTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PubReceiveTransfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubReceiveTransfRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string private_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_key().data(), static_cast<int>(this->private_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubReceiveTransfRequest.private_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_hash().data(), static_cast<int>(this->from_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubReceiveTransfRequest.from_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubReceiveTransfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubReceiveTransfRequest)
  return false;
#undef DO_
}

void PubReceiveTransfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubReceiveTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfRequest.private_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->private_key(), output);
  }

  // string from_hash = 2;
  if (this->from_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_hash().data(), static_cast<int>(this->from_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfRequest.from_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubReceiveTransfRequest)
}

::google::protobuf::uint8* PubReceiveTransfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubReceiveTransfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfRequest.private_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->private_key(), target);
  }

  // string from_hash = 2;
  if (this->from_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_hash().data(), static_cast<int>(this->from_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfRequest.from_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubReceiveTransfRequest)
  return target;
}

size_t PubReceiveTransfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubReceiveTransfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string private_key = 1;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->private_key());
  }

  // string from_hash = 2;
  if (this->from_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubReceiveTransfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubReceiveTransfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PubReceiveTransfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubReceiveTransfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubReceiveTransfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubReceiveTransfRequest)
    MergeFrom(*source);
  }
}

void PubReceiveTransfRequest::MergeFrom(const PubReceiveTransfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubReceiveTransfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.from_hash().size() > 0) {

    from_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_hash_);
  }
}

void PubReceiveTransfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubReceiveTransfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubReceiveTransfRequest::CopyFrom(const PubReceiveTransfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubReceiveTransfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubReceiveTransfRequest::IsInitialized() const {
  return true;
}

void PubReceiveTransfRequest::Swap(PubReceiveTransfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubReceiveTransfRequest::InternalSwap(PubReceiveTransfRequest* other) {
  using std::swap;
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_hash_.Swap(&other->from_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubReceiveTransfRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubReceiveTransfReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubReceiveTransfReply::kResultFieldNumber;
const int PubReceiveTransfReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubReceiveTransfReply::PubReceiveTransfReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubReceiveTransfReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubReceiveTransfReply)
}
PubReceiveTransfReply::PubReceiveTransfReply(const PubReceiveTransfReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubReceiveTransfReply)
}

void PubReceiveTransfReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

PubReceiveTransfReply::~PubReceiveTransfReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubReceiveTransfReply)
  SharedDtor();
}

void PubReceiveTransfReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubReceiveTransfReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubReceiveTransfReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubReceiveTransfReply& PubReceiveTransfReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubReceiveTransfReply.base);
  return *internal_default_instance();
}


void PubReceiveTransfReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubReceiveTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool PubReceiveTransfReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubReceiveTransfReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubReceiveTransfReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubReceiveTransfReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubReceiveTransfReply)
  return false;
#undef DO_
}

void PubReceiveTransfReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubReceiveTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubReceiveTransfReply)
}

::google::protobuf::uint8* PubReceiveTransfReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubReceiveTransfReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubReceiveTransfReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubReceiveTransfReply)
  return target;
}

size_t PubReceiveTransfReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubReceiveTransfReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubReceiveTransfReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubReceiveTransfReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PubReceiveTransfReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubReceiveTransfReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubReceiveTransfReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubReceiveTransfReply)
    MergeFrom(*source);
  }
}

void PubReceiveTransfReply::MergeFrom(const PubReceiveTransfReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubReceiveTransfReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PubReceiveTransfReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubReceiveTransfReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubReceiveTransfReply::CopyFrom(const PubReceiveTransfReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubReceiveTransfReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubReceiveTransfReply::IsInitialized() const {
  return true;
}

void PubReceiveTransfReply::Swap(PubReceiveTransfReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubReceiveTransfReply::InternalSwap(PubReceiveTransfReply* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubReceiveTransfReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubSendMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubSendMessageRequest::kPrivateKeyFieldNumber;
const int PubSendMessageRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubSendMessageRequest::PubSendMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubSendMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubSendMessageRequest)
}
PubSendMessageRequest::PubSendMessageRequest(const PubSendMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubSendMessageRequest)
}

void PubSendMessageRequest::SharedCtor() {
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PubSendMessageRequest::~PubSendMessageRequest() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubSendMessageRequest)
  SharedDtor();
}

void PubSendMessageRequest::SharedDtor() {
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubSendMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubSendMessageRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubSendMessageRequest& PubSendMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubSendMessageRequest.base);
  return *internal_default_instance();
}


void PubSendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubSendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PubSendMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubSendMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string private_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_key().data(), static_cast<int>(this->private_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendMessageRequest.private_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendMessageRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubSendMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubSendMessageRequest)
  return false;
#undef DO_
}

void PubSendMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubSendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageRequest.private_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->private_key(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubSendMessageRequest)
}

::google::protobuf::uint8* PubSendMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubSendMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string private_key = 1;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageRequest.private_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->private_key(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubSendMessageRequest)
  return target;
}

size_t PubSendMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubSendMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string private_key = 1;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->private_key());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubSendMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubSendMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PubSendMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubSendMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubSendMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubSendMessageRequest)
    MergeFrom(*source);
  }
}

void PubSendMessageRequest::MergeFrom(const PubSendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubSendMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void PubSendMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubSendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubSendMessageRequest::CopyFrom(const PubSendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubSendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubSendMessageRequest::IsInitialized() const {
  return true;
}

void PubSendMessageRequest::Swap(PubSendMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubSendMessageRequest::InternalSwap(PubSendMessageRequest* other) {
  using std::swap;
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubSendMessageRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubSendMessageReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubSendMessageReply::kResultFieldNumber;
const int PubSendMessageReply::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubSendMessageReply::PubSendMessageReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_PubSendMessageReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ambr.rpc.PubSendMessageReply)
}
PubSendMessageReply::PubSendMessageReply(const PubSendMessageReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ambr.rpc.PubSendMessageReply)
}

void PubSendMessageReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

PubSendMessageReply::~PubSendMessageReply() {
  // @@protoc_insertion_point(destructor:ambr.rpc.PubSendMessageReply)
  SharedDtor();
}

void PubSendMessageReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubSendMessageReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PubSendMessageReply::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubSendMessageReply& PubSendMessageReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_PubSendMessageReply.base);
  return *internal_default_instance();
}


void PubSendMessageReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ambr.rpc.PubSendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool PubSendMessageReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ambr.rpc.PubSendMessageReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ambr.rpc.PubSendMessageReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ambr.rpc.PubSendMessageReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ambr.rpc.PubSendMessageReply)
  return false;
#undef DO_
}

void PubSendMessageReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ambr.rpc.PubSendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ambr.rpc.PubSendMessageReply)
}

::google::protobuf::uint8* PubSendMessageReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ambr.rpc.PubSendMessageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ambr.rpc.PubSendMessageReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ambr.rpc.PubSendMessageReply)
  return target;
}

size_t PubSendMessageReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ambr.rpc.PubSendMessageReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubSendMessageReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ambr.rpc.PubSendMessageReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PubSendMessageReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubSendMessageReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ambr.rpc.PubSendMessageReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ambr.rpc.PubSendMessageReply)
    MergeFrom(*source);
  }
}

void PubSendMessageReply::MergeFrom(const PubSendMessageReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ambr.rpc.PubSendMessageReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PubSendMessageReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ambr.rpc.PubSendMessageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubSendMessageReply::CopyFrom(const PubSendMessageReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ambr.rpc.PubSendMessageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubSendMessageReply::IsInitialized() const {
  return true;
}

void PubSendMessageReply::Swap(PubSendMessageReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubSendMessageReply::InternalSwap(PubSendMessageReply* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PubSendMessageReply::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace ambr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::AddUnitRequest* Arena::CreateMaybeMessage< ::ambr::rpc::AddUnitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::AddUnitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::AddUnitReply* Arena::CreateMaybeMessage< ::ambr::rpc::AddUnitReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::AddUnitReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::WaitForReceiveItem* Arena::CreateMaybeMessage< ::ambr::rpc::WaitForReceiveItem >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::WaitForReceiveItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetWaitForReceiveUnitRequest* Arena::CreateMaybeMessage< ::ambr::rpc::GetWaitForReceiveUnitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetWaitForReceiveUnitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetWaitForReceiveUnitReply* Arena::CreateMaybeMessage< ::ambr::rpc::GetWaitForReceiveUnitReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetWaitForReceiveUnitReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetBalanceRequest* Arena::CreateMaybeMessage< ::ambr::rpc::GetBalanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetBalanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetBalanceReply* Arena::CreateMaybeMessage< ::ambr::rpc::GetBalanceReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetBalanceReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::HistoryItem* Arena::CreateMaybeMessage< ::ambr::rpc::HistoryItem >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::HistoryItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetHistoryRequest* Arena::CreateMaybeMessage< ::ambr::rpc::GetHistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetHistoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetHistoryReply* Arena::CreateMaybeMessage< ::ambr::rpc::GetHistoryReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetHistoryReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::SendMessageRequest* Arena::CreateMaybeMessage< ::ambr::rpc::SendMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::SendMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::SendMessageReply* Arena::CreateMaybeMessage< ::ambr::rpc::SendMessageReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::SendMessageReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetLastUnitHashRequest* Arena::CreateMaybeMessage< ::ambr::rpc::GetLastUnitHashRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetLastUnitHashRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::GetLastUnitHashReplay* Arena::CreateMaybeMessage< ::ambr::rpc::GetLastUnitHashReplay >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::GetLastUnitHashReplay >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::MessageStreamRequest* Arena::CreateMaybeMessage< ::ambr::rpc::MessageStreamRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::MessageStreamRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::MessageStreamReply* Arena::CreateMaybeMessage< ::ambr::rpc::MessageStreamReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::MessageStreamReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubSendTransfRequest* Arena::CreateMaybeMessage< ::ambr::rpc::PubSendTransfRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubSendTransfRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubSendTransfReply* Arena::CreateMaybeMessage< ::ambr::rpc::PubSendTransfReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubSendTransfReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubReceiveTransfRequest* Arena::CreateMaybeMessage< ::ambr::rpc::PubReceiveTransfRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubReceiveTransfRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubReceiveTransfReply* Arena::CreateMaybeMessage< ::ambr::rpc::PubReceiveTransfReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubReceiveTransfReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubSendMessageRequest* Arena::CreateMaybeMessage< ::ambr::rpc::PubSendMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubSendMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ambr::rpc::PubSendMessageReply* Arena::CreateMaybeMessage< ::ambr::rpc::PubSendMessageReply >(Arena* arena) {
  return Arena::CreateInternal< ::ambr::rpc::PubSendMessageReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
