// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unit.proto

#ifndef PROTOBUF_INCLUDED_unit_2eproto
#define PROTOBUF_INCLUDED_unit_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_unit_2eproto 

namespace protobuf_unit_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_unit_2eproto
namespace ambr {
namespace protobuf {
class EnterValidateSetUint;
class EnterValidateSetUintDefaultTypeInternal;
extern EnterValidateSetUintDefaultTypeInternal _EnterValidateSetUint_default_instance_;
class LeaveValidateSetUint;
class LeaveValidateSetUintDefaultTypeInternal;
extern LeaveValidateSetUintDefaultTypeInternal _LeaveValidateSetUint_default_instance_;
class ReceiveUnit;
class ReceiveUnitDefaultTypeInternal;
extern ReceiveUnitDefaultTypeInternal _ReceiveUnit_default_instance_;
class SendUnit;
class SendUnitDefaultTypeInternal;
extern SendUnitDefaultTypeInternal _SendUnit_default_instance_;
class ValidatorUnit;
class ValidatorUnitDefaultTypeInternal;
extern ValidatorUnitDefaultTypeInternal _ValidatorUnit_default_instance_;
class VoteUnit;
class VoteUnitDefaultTypeInternal;
extern VoteUnitDefaultTypeInternal _VoteUnit_default_instance_;
}  // namespace protobuf
}  // namespace ambr
namespace google {
namespace protobuf {
template<> ::ambr::protobuf::EnterValidateSetUint* Arena::CreateMaybeMessage<::ambr::protobuf::EnterValidateSetUint>(Arena*);
template<> ::ambr::protobuf::LeaveValidateSetUint* Arena::CreateMaybeMessage<::ambr::protobuf::LeaveValidateSetUint>(Arena*);
template<> ::ambr::protobuf::ReceiveUnit* Arena::CreateMaybeMessage<::ambr::protobuf::ReceiveUnit>(Arena*);
template<> ::ambr::protobuf::SendUnit* Arena::CreateMaybeMessage<::ambr::protobuf::SendUnit>(Arena*);
template<> ::ambr::protobuf::ValidatorUnit* Arena::CreateMaybeMessage<::ambr::protobuf::ValidatorUnit>(Arena*);
template<> ::ambr::protobuf::VoteUnit* Arena::CreateMaybeMessage<::ambr::protobuf::VoteUnit>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ambr {
namespace protobuf {

enum SendUnit_Type {
  SendUnit_Type_Invalidate = 0,
  SendUnit_Type_send = 1,
  SendUnit_Type_receive = 2,
  SendUnit_Type_Vote = 3,
  SendUnit_Type_Validator = 4,
  SendUnit_Type_EnterValidateSet = 5,
  SendUnit_Type_LeaveValidateSet = 6,
  SendUnit_Type_SendUnit_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SendUnit_Type_SendUnit_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SendUnit_Type_IsValid(int value);
const SendUnit_Type SendUnit_Type_Type_MIN = SendUnit_Type_Invalidate;
const SendUnit_Type SendUnit_Type_Type_MAX = SendUnit_Type_LeaveValidateSet;
const int SendUnit_Type_Type_ARRAYSIZE = SendUnit_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* SendUnit_Type_descriptor();
inline const ::std::string& SendUnit_Type_Name(SendUnit_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    SendUnit_Type_descriptor(), value);
}
inline bool SendUnit_Type_Parse(
    const ::std::string& name, SendUnit_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SendUnit_Type>(
    SendUnit_Type_descriptor(), name, value);
}
enum SendUnit_DataType {
  SendUnit_DataType_Normal = 0,
  SendUnit_DataType_CreateContract = 1,
  SendUnit_DataType_RunContract = 2,
  SendUnit_DataType_SendUnit_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SendUnit_DataType_SendUnit_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SendUnit_DataType_IsValid(int value);
const SendUnit_DataType SendUnit_DataType_DataType_MIN = SendUnit_DataType_Normal;
const SendUnit_DataType SendUnit_DataType_DataType_MAX = SendUnit_DataType_RunContract;
const int SendUnit_DataType_DataType_ARRAYSIZE = SendUnit_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SendUnit_DataType_descriptor();
inline const ::std::string& SendUnit_DataType_Name(SendUnit_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SendUnit_DataType_descriptor(), value);
}
inline bool SendUnit_DataType_Parse(
    const ::std::string& name, SendUnit_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SendUnit_DataType>(
    SendUnit_DataType_descriptor(), name, value);
}
enum ReceiveUnit_Type {
  ReceiveUnit_Type_Invalidate = 0,
  ReceiveUnit_Type_send = 1,
  ReceiveUnit_Type_receive = 2,
  ReceiveUnit_Type_Vote = 3,
  ReceiveUnit_Type_Validator = 4,
  ReceiveUnit_Type_EnterValidateSet = 5,
  ReceiveUnit_Type_LeaveValidateSet = 6,
  ReceiveUnit_Type_ReceiveUnit_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReceiveUnit_Type_ReceiveUnit_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReceiveUnit_Type_IsValid(int value);
const ReceiveUnit_Type ReceiveUnit_Type_Type_MIN = ReceiveUnit_Type_Invalidate;
const ReceiveUnit_Type ReceiveUnit_Type_Type_MAX = ReceiveUnit_Type_LeaveValidateSet;
const int ReceiveUnit_Type_Type_ARRAYSIZE = ReceiveUnit_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReceiveUnit_Type_descriptor();
inline const ::std::string& ReceiveUnit_Type_Name(ReceiveUnit_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReceiveUnit_Type_descriptor(), value);
}
inline bool ReceiveUnit_Type_Parse(
    const ::std::string& name, ReceiveUnit_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReceiveUnit_Type>(
    ReceiveUnit_Type_descriptor(), name, value);
}
enum VoteUnit_Type {
  VoteUnit_Type_Invalidate = 0,
  VoteUnit_Type_send = 1,
  VoteUnit_Type_receive = 2,
  VoteUnit_Type_Vote = 3,
  VoteUnit_Type_Validator = 4,
  VoteUnit_Type_EnterValidateSet = 5,
  VoteUnit_Type_LeaveValidateSet = 6,
  VoteUnit_Type_VoteUnit_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VoteUnit_Type_VoteUnit_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VoteUnit_Type_IsValid(int value);
const VoteUnit_Type VoteUnit_Type_Type_MIN = VoteUnit_Type_Invalidate;
const VoteUnit_Type VoteUnit_Type_Type_MAX = VoteUnit_Type_LeaveValidateSet;
const int VoteUnit_Type_Type_ARRAYSIZE = VoteUnit_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* VoteUnit_Type_descriptor();
inline const ::std::string& VoteUnit_Type_Name(VoteUnit_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    VoteUnit_Type_descriptor(), value);
}
inline bool VoteUnit_Type_Parse(
    const ::std::string& name, VoteUnit_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VoteUnit_Type>(
    VoteUnit_Type_descriptor(), name, value);
}
enum ValidatorUnit_Type {
  ValidatorUnit_Type_Invalidate = 0,
  ValidatorUnit_Type_send = 1,
  ValidatorUnit_Type_receive = 2,
  ValidatorUnit_Type_Vote = 3,
  ValidatorUnit_Type_Validator = 4,
  ValidatorUnit_Type_EnterValidateSet = 5,
  ValidatorUnit_Type_LeaveValidateSet = 6,
  ValidatorUnit_Type_ValidatorUnit_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ValidatorUnit_Type_ValidatorUnit_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ValidatorUnit_Type_IsValid(int value);
const ValidatorUnit_Type ValidatorUnit_Type_Type_MIN = ValidatorUnit_Type_Invalidate;
const ValidatorUnit_Type ValidatorUnit_Type_Type_MAX = ValidatorUnit_Type_LeaveValidateSet;
const int ValidatorUnit_Type_Type_ARRAYSIZE = ValidatorUnit_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ValidatorUnit_Type_descriptor();
inline const ::std::string& ValidatorUnit_Type_Name(ValidatorUnit_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ValidatorUnit_Type_descriptor(), value);
}
inline bool ValidatorUnit_Type_Parse(
    const ::std::string& name, ValidatorUnit_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ValidatorUnit_Type>(
    ValidatorUnit_Type_descriptor(), name, value);
}
enum EnterValidateSetUint_Type {
  EnterValidateSetUint_Type_Invalidate = 0,
  EnterValidateSetUint_Type_send = 1,
  EnterValidateSetUint_Type_receive = 2,
  EnterValidateSetUint_Type_Vote = 3,
  EnterValidateSetUint_Type_Validator = 4,
  EnterValidateSetUint_Type_EnterValidateSet = 5,
  EnterValidateSetUint_Type_LeaveValidateSet = 6,
  EnterValidateSetUint_Type_EnterValidateSetUint_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterValidateSetUint_Type_EnterValidateSetUint_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterValidateSetUint_Type_IsValid(int value);
const EnterValidateSetUint_Type EnterValidateSetUint_Type_Type_MIN = EnterValidateSetUint_Type_Invalidate;
const EnterValidateSetUint_Type EnterValidateSetUint_Type_Type_MAX = EnterValidateSetUint_Type_LeaveValidateSet;
const int EnterValidateSetUint_Type_Type_ARRAYSIZE = EnterValidateSetUint_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterValidateSetUint_Type_descriptor();
inline const ::std::string& EnterValidateSetUint_Type_Name(EnterValidateSetUint_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterValidateSetUint_Type_descriptor(), value);
}
inline bool EnterValidateSetUint_Type_Parse(
    const ::std::string& name, EnterValidateSetUint_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterValidateSetUint_Type>(
    EnterValidateSetUint_Type_descriptor(), name, value);
}
enum LeaveValidateSetUint_Type {
  LeaveValidateSetUint_Type_Invalidate = 0,
  LeaveValidateSetUint_Type_send = 1,
  LeaveValidateSetUint_Type_receive = 2,
  LeaveValidateSetUint_Type_Vote = 3,
  LeaveValidateSetUint_Type_Validator = 4,
  LeaveValidateSetUint_Type_EnterValidateSet = 5,
  LeaveValidateSetUint_Type_LeaveValidateSet = 6,
  LeaveValidateSetUint_Type_LeaveValidateSetUint_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LeaveValidateSetUint_Type_LeaveValidateSetUint_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LeaveValidateSetUint_Type_IsValid(int value);
const LeaveValidateSetUint_Type LeaveValidateSetUint_Type_Type_MIN = LeaveValidateSetUint_Type_Invalidate;
const LeaveValidateSetUint_Type LeaveValidateSetUint_Type_Type_MAX = LeaveValidateSetUint_Type_LeaveValidateSet;
const int LeaveValidateSetUint_Type_Type_ARRAYSIZE = LeaveValidateSetUint_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* LeaveValidateSetUint_Type_descriptor();
inline const ::std::string& LeaveValidateSetUint_Type_Name(LeaveValidateSetUint_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    LeaveValidateSetUint_Type_descriptor(), value);
}
inline bool LeaveValidateSetUint_Type_Parse(
    const ::std::string& name, LeaveValidateSetUint_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LeaveValidateSetUint_Type>(
    LeaveValidateSetUint_Type_descriptor(), name, value);
}
// ===================================================================

class SendUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.SendUnit) */ {
 public:
  SendUnit();
  virtual ~SendUnit();

  SendUnit(const SendUnit& from);

  inline SendUnit& operator=(const SendUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendUnit(SendUnit&& from) noexcept
    : SendUnit() {
    *this = ::std::move(from);
  }

  inline SendUnit& operator=(SendUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendUnit* internal_default_instance() {
    return reinterpret_cast<const SendUnit*>(
               &_SendUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SendUnit* other);
  friend void swap(SendUnit& a, SendUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendUnit* New() const final {
    return CreateMaybeMessage<SendUnit>(NULL);
  }

  SendUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendUnit& from);
  void MergeFrom(const SendUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SendUnit_Type Type;
  static const Type Invalidate =
    SendUnit_Type_Invalidate;
  static const Type send =
    SendUnit_Type_send;
  static const Type receive =
    SendUnit_Type_receive;
  static const Type Vote =
    SendUnit_Type_Vote;
  static const Type Validator =
    SendUnit_Type_Validator;
  static const Type EnterValidateSet =
    SendUnit_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    SendUnit_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return SendUnit_Type_IsValid(value);
  }
  static const Type Type_MIN =
    SendUnit_Type_Type_MIN;
  static const Type Type_MAX =
    SendUnit_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    SendUnit_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return SendUnit_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return SendUnit_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return SendUnit_Type_Parse(name, value);
  }

  typedef SendUnit_DataType DataType;
  static const DataType Normal =
    SendUnit_DataType_Normal;
  static const DataType CreateContract =
    SendUnit_DataType_CreateContract;
  static const DataType RunContract =
    SendUnit_DataType_RunContract;
  static inline bool DataType_IsValid(int value) {
    return SendUnit_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    SendUnit_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    SendUnit_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    SendUnit_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return SendUnit_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return SendUnit_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return SendUnit_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // bytes dest_ = 8;
  void clear_dest_();
  static const int kDestFieldNumber = 8;
  const ::std::string& dest_() const;
  void set_dest_(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_(::std::string&& value);
  #endif
  void set_dest_(const char* value);
  void set_dest_(const void* value, size_t size);
  ::std::string* mutable_dest_();
  ::std::string* release_dest_();
  void set_allocated_dest_(::std::string* dest_);

  // bytes data_ = 10;
  void clear_data_();
  static const int kDataFieldNumber = 10;
  const ::std::string& data_() const;
  void set_data_(const ::std::string& value);
  #if LANG_CXX11
  void set_data_(::std::string&& value);
  #endif
  void set_data_(const char* value);
  void set_data_(const void* value, size_t size);
  ::std::string* mutable_data_();
  ::std::string* release_data_();
  void set_allocated_data_(::std::string* data_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.SendUnit.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::SendUnit_Type type_() const;
  void set_type_(::ambr::protobuf::SendUnit_Type value);

  // .ambr.protobuf.SendUnit.DataType data_type_ = 9;
  void clear_data_type_();
  static const int kDataTypeFieldNumber = 9;
  ::ambr::protobuf::SendUnit_DataType data_type_() const;
  void set_data_type_(::ambr::protobuf::SendUnit_DataType value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.SendUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::internal::ArenaStringPtr dest__;
  ::google::protobuf::internal::ArenaStringPtr data__;
  ::google::protobuf::uint32 version__;
  int type__;
  int data_type__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReceiveUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.ReceiveUnit) */ {
 public:
  ReceiveUnit();
  virtual ~ReceiveUnit();

  ReceiveUnit(const ReceiveUnit& from);

  inline ReceiveUnit& operator=(const ReceiveUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReceiveUnit(ReceiveUnit&& from) noexcept
    : ReceiveUnit() {
    *this = ::std::move(from);
  }

  inline ReceiveUnit& operator=(ReceiveUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReceiveUnit* internal_default_instance() {
    return reinterpret_cast<const ReceiveUnit*>(
               &_ReceiveUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ReceiveUnit* other);
  friend void swap(ReceiveUnit& a, ReceiveUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReceiveUnit* New() const final {
    return CreateMaybeMessage<ReceiveUnit>(NULL);
  }

  ReceiveUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReceiveUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReceiveUnit& from);
  void MergeFrom(const ReceiveUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReceiveUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReceiveUnit_Type Type;
  static const Type Invalidate =
    ReceiveUnit_Type_Invalidate;
  static const Type send =
    ReceiveUnit_Type_send;
  static const Type receive =
    ReceiveUnit_Type_receive;
  static const Type Vote =
    ReceiveUnit_Type_Vote;
  static const Type Validator =
    ReceiveUnit_Type_Validator;
  static const Type EnterValidateSet =
    ReceiveUnit_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    ReceiveUnit_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return ReceiveUnit_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ReceiveUnit_Type_Type_MIN;
  static const Type Type_MAX =
    ReceiveUnit_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ReceiveUnit_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ReceiveUnit_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ReceiveUnit_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ReceiveUnit_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // bytes from_ = 8;
  void clear_from_();
  static const int kFromFieldNumber = 8;
  const ::std::string& from_() const;
  void set_from_(const ::std::string& value);
  #if LANG_CXX11
  void set_from_(::std::string&& value);
  #endif
  void set_from_(const char* value);
  void set_from_(const void* value, size_t size);
  ::std::string* mutable_from_();
  ::std::string* release_from_();
  void set_allocated_from_(::std::string* from_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.ReceiveUnit.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::ReceiveUnit_Type type_() const;
  void set_type_(::ambr::protobuf::ReceiveUnit_Type value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.ReceiveUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::internal::ArenaStringPtr from__;
  ::google::protobuf::uint32 version__;
  int type__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoteUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.VoteUnit) */ {
 public:
  VoteUnit();
  virtual ~VoteUnit();

  VoteUnit(const VoteUnit& from);

  inline VoteUnit& operator=(const VoteUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteUnit(VoteUnit&& from) noexcept
    : VoteUnit() {
    *this = ::std::move(from);
  }

  inline VoteUnit& operator=(VoteUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteUnit* internal_default_instance() {
    return reinterpret_cast<const VoteUnit*>(
               &_VoteUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VoteUnit* other);
  friend void swap(VoteUnit& a, VoteUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteUnit* New() const final {
    return CreateMaybeMessage<VoteUnit>(NULL);
  }

  VoteUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteUnit& from);
  void MergeFrom(const VoteUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VoteUnit_Type Type;
  static const Type Invalidate =
    VoteUnit_Type_Invalidate;
  static const Type send =
    VoteUnit_Type_send;
  static const Type receive =
    VoteUnit_Type_receive;
  static const Type Vote =
    VoteUnit_Type_Vote;
  static const Type Validator =
    VoteUnit_Type_Validator;
  static const Type EnterValidateSet =
    VoteUnit_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    VoteUnit_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return VoteUnit_Type_IsValid(value);
  }
  static const Type Type_MIN =
    VoteUnit_Type_Type_MIN;
  static const Type Type_MAX =
    VoteUnit_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    VoteUnit_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return VoteUnit_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return VoteUnit_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return VoteUnit_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // bytes validator_unit_hash_ = 8;
  void clear_validator_unit_hash_();
  static const int kValidatorUnitHashFieldNumber = 8;
  const ::std::string& validator_unit_hash_() const;
  void set_validator_unit_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_validator_unit_hash_(::std::string&& value);
  #endif
  void set_validator_unit_hash_(const char* value);
  void set_validator_unit_hash_(const void* value, size_t size);
  ::std::string* mutable_validator_unit_hash_();
  ::std::string* release_validator_unit_hash_();
  void set_allocated_validator_unit_hash_(::std::string* validator_unit_hash_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.VoteUnit.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::VoteUnit_Type type_() const;
  void set_type_(::ambr::protobuf::VoteUnit_Type value);

  // uint32 accept_ = 9;
  void clear_accept_();
  static const int kAcceptFieldNumber = 9;
  ::google::protobuf::uint32 accept_() const;
  void set_accept_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.VoteUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::internal::ArenaStringPtr validator_unit_hash__;
  ::google::protobuf::uint32 version__;
  int type__;
  ::google::protobuf::uint32 accept__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValidatorUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.ValidatorUnit) */ {
 public:
  ValidatorUnit();
  virtual ~ValidatorUnit();

  ValidatorUnit(const ValidatorUnit& from);

  inline ValidatorUnit& operator=(const ValidatorUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidatorUnit(ValidatorUnit&& from) noexcept
    : ValidatorUnit() {
    *this = ::std::move(from);
  }

  inline ValidatorUnit& operator=(ValidatorUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidatorUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidatorUnit* internal_default_instance() {
    return reinterpret_cast<const ValidatorUnit*>(
               &_ValidatorUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ValidatorUnit* other);
  friend void swap(ValidatorUnit& a, ValidatorUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidatorUnit* New() const final {
    return CreateMaybeMessage<ValidatorUnit>(NULL);
  }

  ValidatorUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidatorUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidatorUnit& from);
  void MergeFrom(const ValidatorUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidatorUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ValidatorUnit_Type Type;
  static const Type Invalidate =
    ValidatorUnit_Type_Invalidate;
  static const Type send =
    ValidatorUnit_Type_send;
  static const Type receive =
    ValidatorUnit_Type_receive;
  static const Type Vote =
    ValidatorUnit_Type_Vote;
  static const Type Validator =
    ValidatorUnit_Type_Validator;
  static const Type EnterValidateSet =
    ValidatorUnit_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    ValidatorUnit_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return ValidatorUnit_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ValidatorUnit_Type_Type_MIN;
  static const Type Type_MAX =
    ValidatorUnit_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ValidatorUnit_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ValidatorUnit_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ValidatorUnit_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ValidatorUnit_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes check_list_ = 8;
  int check_list__size() const;
  void clear_check_list_();
  static const int kCheckListFieldNumber = 8;
  const ::std::string& check_list_(int index) const;
  ::std::string* mutable_check_list_(int index);
  void set_check_list_(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_check_list_(int index, ::std::string&& value);
  #endif
  void set_check_list_(int index, const char* value);
  void set_check_list_(int index, const void* value, size_t size);
  ::std::string* add_check_list_();
  void add_check_list_(const ::std::string& value);
  #if LANG_CXX11
  void add_check_list_(::std::string&& value);
  #endif
  void add_check_list_(const char* value);
  void add_check_list_(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& check_list_() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_check_list_();

  // repeated bytes vote_hash_list_ = 9;
  int vote_hash_list__size() const;
  void clear_vote_hash_list_();
  static const int kVoteHashListFieldNumber = 9;
  const ::std::string& vote_hash_list_(int index) const;
  ::std::string* mutable_vote_hash_list_(int index);
  void set_vote_hash_list_(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_vote_hash_list_(int index, ::std::string&& value);
  #endif
  void set_vote_hash_list_(int index, const char* value);
  void set_vote_hash_list_(int index, const void* value, size_t size);
  ::std::string* add_vote_hash_list_();
  void add_vote_hash_list_(const ::std::string& value);
  #if LANG_CXX11
  void add_vote_hash_list_(::std::string&& value);
  #endif
  void add_vote_hash_list_(const char* value);
  void add_vote_hash_list_(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& vote_hash_list_() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_vote_hash_list_();

  // repeated .ambr.protobuf.VoteUnit vote_list_ = 11;
  int vote_list__size() const;
  void clear_vote_list_();
  static const int kVoteListFieldNumber = 11;
  ::ambr::protobuf::VoteUnit* mutable_vote_list_(int index);
  ::google::protobuf::RepeatedPtrField< ::ambr::protobuf::VoteUnit >*
      mutable_vote_list_();
  const ::ambr::protobuf::VoteUnit& vote_list_(int index) const;
  ::ambr::protobuf::VoteUnit* add_vote_list_();
  const ::google::protobuf::RepeatedPtrField< ::ambr::protobuf::VoteUnit >&
      vote_list_() const;

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.ValidatorUnit.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::ValidatorUnit_Type type_() const;
  void set_type_(::ambr::protobuf::ValidatorUnit_Type value);

  // uint64 time_stamp_ = 12;
  void clear_time_stamp_();
  static const int kTimeStampFieldNumber = 12;
  ::google::protobuf::uint64 time_stamp_() const;
  void set_time_stamp_(::google::protobuf::uint64 value);

  // uint64 nonce_ = 13;
  void clear_nonce_();
  static const int kNonceFieldNumber = 13;
  ::google::protobuf::uint64 nonce_() const;
  void set_nonce_(::google::protobuf::uint64 value);

  // uint32 percent_ = 10;
  void clear_percent_();
  static const int kPercentFieldNumber = 10;
  ::google::protobuf::uint32 percent_() const;
  void set_percent_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.ValidatorUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> check_list__;
  ::google::protobuf::RepeatedPtrField< ::std::string> vote_hash_list__;
  ::google::protobuf::RepeatedPtrField< ::ambr::protobuf::VoteUnit > vote_list__;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::uint32 version__;
  int type__;
  ::google::protobuf::uint64 time_stamp__;
  ::google::protobuf::uint64 nonce__;
  ::google::protobuf::uint32 percent__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterValidateSetUint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.EnterValidateSetUint) */ {
 public:
  EnterValidateSetUint();
  virtual ~EnterValidateSetUint();

  EnterValidateSetUint(const EnterValidateSetUint& from);

  inline EnterValidateSetUint& operator=(const EnterValidateSetUint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterValidateSetUint(EnterValidateSetUint&& from) noexcept
    : EnterValidateSetUint() {
    *this = ::std::move(from);
  }

  inline EnterValidateSetUint& operator=(EnterValidateSetUint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterValidateSetUint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterValidateSetUint* internal_default_instance() {
    return reinterpret_cast<const EnterValidateSetUint*>(
               &_EnterValidateSetUint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(EnterValidateSetUint* other);
  friend void swap(EnterValidateSetUint& a, EnterValidateSetUint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterValidateSetUint* New() const final {
    return CreateMaybeMessage<EnterValidateSetUint>(NULL);
  }

  EnterValidateSetUint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnterValidateSetUint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnterValidateSetUint& from);
  void MergeFrom(const EnterValidateSetUint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterValidateSetUint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EnterValidateSetUint_Type Type;
  static const Type Invalidate =
    EnterValidateSetUint_Type_Invalidate;
  static const Type send =
    EnterValidateSetUint_Type_send;
  static const Type receive =
    EnterValidateSetUint_Type_receive;
  static const Type Vote =
    EnterValidateSetUint_Type_Vote;
  static const Type Validator =
    EnterValidateSetUint_Type_Validator;
  static const Type EnterValidateSet =
    EnterValidateSetUint_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    EnterValidateSetUint_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return EnterValidateSetUint_Type_IsValid(value);
  }
  static const Type Type_MIN =
    EnterValidateSetUint_Type_Type_MIN;
  static const Type Type_MAX =
    EnterValidateSetUint_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    EnterValidateSetUint_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return EnterValidateSetUint_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return EnterValidateSetUint_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return EnterValidateSetUint_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.EnterValidateSetUint.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::EnterValidateSetUint_Type type_() const;
  void set_type_(::ambr::protobuf::EnterValidateSetUint_Type value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.EnterValidateSetUint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::uint32 version__;
  int type__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveValidateSetUint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ambr.protobuf.LeaveValidateSetUint) */ {
 public:
  LeaveValidateSetUint();
  virtual ~LeaveValidateSetUint();

  LeaveValidateSetUint(const LeaveValidateSetUint& from);

  inline LeaveValidateSetUint& operator=(const LeaveValidateSetUint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveValidateSetUint(LeaveValidateSetUint&& from) noexcept
    : LeaveValidateSetUint() {
    *this = ::std::move(from);
  }

  inline LeaveValidateSetUint& operator=(LeaveValidateSetUint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveValidateSetUint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveValidateSetUint* internal_default_instance() {
    return reinterpret_cast<const LeaveValidateSetUint*>(
               &_LeaveValidateSetUint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LeaveValidateSetUint* other);
  friend void swap(LeaveValidateSetUint& a, LeaveValidateSetUint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveValidateSetUint* New() const final {
    return CreateMaybeMessage<LeaveValidateSetUint>(NULL);
  }

  LeaveValidateSetUint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveValidateSetUint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaveValidateSetUint& from);
  void MergeFrom(const LeaveValidateSetUint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveValidateSetUint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LeaveValidateSetUint_Type Type;
  static const Type Invalidate =
    LeaveValidateSetUint_Type_Invalidate;
  static const Type send =
    LeaveValidateSetUint_Type_send;
  static const Type receive =
    LeaveValidateSetUint_Type_receive;
  static const Type Vote =
    LeaveValidateSetUint_Type_Vote;
  static const Type Validator =
    LeaveValidateSetUint_Type_Validator;
  static const Type EnterValidateSet =
    LeaveValidateSetUint_Type_EnterValidateSet;
  static const Type LeaveValidateSet =
    LeaveValidateSetUint_Type_LeaveValidateSet;
  static inline bool Type_IsValid(int value) {
    return LeaveValidateSetUint_Type_IsValid(value);
  }
  static const Type Type_MIN =
    LeaveValidateSetUint_Type_Type_MIN;
  static const Type Type_MAX =
    LeaveValidateSetUint_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    LeaveValidateSetUint_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return LeaveValidateSetUint_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return LeaveValidateSetUint_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return LeaveValidateSetUint_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes public_key_ = 3;
  void clear_public_key_();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key_() const;
  void set_public_key_(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_(::std::string&& value);
  #endif
  void set_public_key_(const char* value);
  void set_public_key_(const void* value, size_t size);
  ::std::string* mutable_public_key_();
  ::std::string* release_public_key_();
  void set_allocated_public_key_(::std::string* public_key_);

  // bytes prev_unit_ = 4;
  void clear_prev_unit_();
  static const int kPrevUnitFieldNumber = 4;
  const ::std::string& prev_unit_() const;
  void set_prev_unit_(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_unit_(::std::string&& value);
  #endif
  void set_prev_unit_(const char* value);
  void set_prev_unit_(const void* value, size_t size);
  ::std::string* mutable_prev_unit_();
  ::std::string* release_prev_unit_();
  void set_allocated_prev_unit_(::std::string* prev_unit_);

  // bytes balance_ = 5;
  void clear_balance_();
  static const int kBalanceFieldNumber = 5;
  const ::std::string& balance_() const;
  void set_balance_(const ::std::string& value);
  #if LANG_CXX11
  void set_balance_(::std::string&& value);
  #endif
  void set_balance_(const char* value);
  void set_balance_(const void* value, size_t size);
  ::std::string* mutable_balance_();
  ::std::string* release_balance_();
  void set_allocated_balance_(::std::string* balance_);

  // bytes hash_ = 6;
  void clear_hash_();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash_() const;
  void set_hash_(const ::std::string& value);
  #if LANG_CXX11
  void set_hash_(::std::string&& value);
  #endif
  void set_hash_(const char* value);
  void set_hash_(const void* value, size_t size);
  ::std::string* mutable_hash_();
  ::std::string* release_hash_();
  void set_allocated_hash_(::std::string* hash_);

  // bytes sign_ = 7;
  void clear_sign_();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign_() const;
  void set_sign_(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_(::std::string&& value);
  #endif
  void set_sign_(const char* value);
  void set_sign_(const void* value, size_t size);
  ::std::string* mutable_sign_();
  ::std::string* release_sign_();
  void set_allocated_sign_(::std::string* sign_);

  // uint32 version_ = 1;
  void clear_version_();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version_() const;
  void set_version_(::google::protobuf::uint32 value);

  // .ambr.protobuf.LeaveValidateSetUint.Type type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  ::ambr::protobuf::LeaveValidateSetUint_Type type_() const;
  void set_type_(::ambr::protobuf::LeaveValidateSetUint_Type value);

  // @@protoc_insertion_point(class_scope:ambr.protobuf.LeaveValidateSetUint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key__;
  ::google::protobuf::internal::ArenaStringPtr prev_unit__;
  ::google::protobuf::internal::ArenaStringPtr balance__;
  ::google::protobuf::internal::ArenaStringPtr hash__;
  ::google::protobuf::internal::ArenaStringPtr sign__;
  ::google::protobuf::uint32 version__;
  int type__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_unit_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendUnit

// uint32 version_ = 1;
inline void SendUnit::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 SendUnit::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.version_)
  return version__;
}
inline void SendUnit::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.version_)
}

// .ambr.protobuf.SendUnit.Type type_ = 2;
inline void SendUnit::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::SendUnit_Type SendUnit::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.type_)
  return static_cast< ::ambr::protobuf::SendUnit_Type >(type__);
}
inline void SendUnit::set_type_(::ambr::protobuf::SendUnit_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.type_)
}

// bytes public_key_ = 3;
inline void SendUnit::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.public_key_)
  return public_key__.GetNoArena();
}
inline void SendUnit::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.public_key_)
}
#if LANG_CXX11
inline void SendUnit::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.public_key_)
}
#endif
inline void SendUnit::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.public_key_)
}
inline void SendUnit::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.public_key_)
}
inline ::std::string* SendUnit::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.public_key_)
}

// bytes prev_unit_ = 4;
inline void SendUnit::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void SendUnit::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.prev_unit_)
}
#if LANG_CXX11
inline void SendUnit::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.prev_unit_)
}
#endif
inline void SendUnit::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.prev_unit_)
}
inline void SendUnit::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.prev_unit_)
}
inline ::std::string* SendUnit::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.prev_unit_)
}

// bytes balance_ = 5;
inline void SendUnit::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.balance_)
  return balance__.GetNoArena();
}
inline void SendUnit::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.balance_)
}
#if LANG_CXX11
inline void SendUnit::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.balance_)
}
#endif
inline void SendUnit::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.balance_)
}
inline void SendUnit::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.balance_)
}
inline ::std::string* SendUnit::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.balance_)
}

// bytes hash_ = 6;
inline void SendUnit::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.hash_)
  return hash__.GetNoArena();
}
inline void SendUnit::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.hash_)
}
#if LANG_CXX11
inline void SendUnit::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.hash_)
}
#endif
inline void SendUnit::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.hash_)
}
inline void SendUnit::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.hash_)
}
inline ::std::string* SendUnit::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.hash_)
}

// bytes sign_ = 7;
inline void SendUnit::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.sign_)
  return sign__.GetNoArena();
}
inline void SendUnit::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.sign_)
}
#if LANG_CXX11
inline void SendUnit::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.sign_)
}
#endif
inline void SendUnit::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.sign_)
}
inline void SendUnit::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.sign_)
}
inline ::std::string* SendUnit::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.sign_)
}

// bytes dest_ = 8;
inline void SendUnit::clear_dest_() {
  dest__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::dest_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.dest_)
  return dest__.GetNoArena();
}
inline void SendUnit::set_dest_(const ::std::string& value) {
  
  dest__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.dest_)
}
#if LANG_CXX11
inline void SendUnit::set_dest_(::std::string&& value) {
  
  dest__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.dest_)
}
#endif
inline void SendUnit::set_dest_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dest__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.dest_)
}
inline void SendUnit::set_dest_(const void* value, size_t size) {
  
  dest__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.dest_)
}
inline ::std::string* SendUnit::mutable_dest_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.dest_)
  return dest__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_dest_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.dest_)
  
  return dest__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_dest_(::std::string* dest_) {
  if (dest_ != NULL) {
    
  } else {
    
  }
  dest__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.dest_)
}

// .ambr.protobuf.SendUnit.DataType data_type_ = 9;
inline void SendUnit::clear_data_type_() {
  data_type__ = 0;
}
inline ::ambr::protobuf::SendUnit_DataType SendUnit::data_type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.data_type_)
  return static_cast< ::ambr::protobuf::SendUnit_DataType >(data_type__);
}
inline void SendUnit::set_data_type_(::ambr::protobuf::SendUnit_DataType value) {
  
  data_type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.data_type_)
}

// bytes data_ = 10;
inline void SendUnit::clear_data_() {
  data__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendUnit::data_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.SendUnit.data_)
  return data__.GetNoArena();
}
inline void SendUnit::set_data_(const ::std::string& value) {
  
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.SendUnit.data_)
}
#if LANG_CXX11
inline void SendUnit::set_data_(::std::string&& value) {
  
  data__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.SendUnit.data_)
}
#endif
inline void SendUnit::set_data_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.SendUnit.data_)
}
inline void SendUnit::set_data_(const void* value, size_t size) {
  
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.SendUnit.data_)
}
inline ::std::string* SendUnit::mutable_data_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.SendUnit.data_)
  return data__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendUnit::release_data_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.SendUnit.data_)
  
  return data__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendUnit::set_allocated_data_(::std::string* data_) {
  if (data_ != NULL) {
    
  } else {
    
  }
  data__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.SendUnit.data_)
}

// -------------------------------------------------------------------

// ReceiveUnit

// uint32 version_ = 1;
inline void ReceiveUnit::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 ReceiveUnit::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.version_)
  return version__;
}
inline void ReceiveUnit::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.version_)
}

// .ambr.protobuf.ReceiveUnit.Type type_ = 2;
inline void ReceiveUnit::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::ReceiveUnit_Type ReceiveUnit::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.type_)
  return static_cast< ::ambr::protobuf::ReceiveUnit_Type >(type__);
}
inline void ReceiveUnit::set_type_(::ambr::protobuf::ReceiveUnit_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.type_)
}

// bytes public_key_ = 3;
inline void ReceiveUnit::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.public_key_)
  return public_key__.GetNoArena();
}
inline void ReceiveUnit::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.public_key_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.public_key_)
}
#endif
inline void ReceiveUnit::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.public_key_)
}
inline void ReceiveUnit::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.public_key_)
}
inline ::std::string* ReceiveUnit::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.public_key_)
}

// bytes prev_unit_ = 4;
inline void ReceiveUnit::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void ReceiveUnit::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.prev_unit_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.prev_unit_)
}
#endif
inline void ReceiveUnit::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.prev_unit_)
}
inline void ReceiveUnit::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.prev_unit_)
}
inline ::std::string* ReceiveUnit::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.prev_unit_)
}

// bytes balance_ = 5;
inline void ReceiveUnit::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.balance_)
  return balance__.GetNoArena();
}
inline void ReceiveUnit::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.balance_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.balance_)
}
#endif
inline void ReceiveUnit::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.balance_)
}
inline void ReceiveUnit::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.balance_)
}
inline ::std::string* ReceiveUnit::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.balance_)
}

// bytes hash_ = 6;
inline void ReceiveUnit::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.hash_)
  return hash__.GetNoArena();
}
inline void ReceiveUnit::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.hash_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.hash_)
}
#endif
inline void ReceiveUnit::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.hash_)
}
inline void ReceiveUnit::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.hash_)
}
inline ::std::string* ReceiveUnit::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.hash_)
}

// bytes sign_ = 7;
inline void ReceiveUnit::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.sign_)
  return sign__.GetNoArena();
}
inline void ReceiveUnit::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.sign_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.sign_)
}
#endif
inline void ReceiveUnit::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.sign_)
}
inline void ReceiveUnit::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.sign_)
}
inline ::std::string* ReceiveUnit::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.sign_)
}

// bytes from_ = 8;
inline void ReceiveUnit::clear_from_() {
  from__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReceiveUnit::from_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ReceiveUnit.from_)
  return from__.GetNoArena();
}
inline void ReceiveUnit::set_from_(const ::std::string& value) {
  
  from__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ReceiveUnit.from_)
}
#if LANG_CXX11
inline void ReceiveUnit::set_from_(::std::string&& value) {
  
  from__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ReceiveUnit.from_)
}
#endif
inline void ReceiveUnit::set_from_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ReceiveUnit.from_)
}
inline void ReceiveUnit::set_from_(const void* value, size_t size) {
  
  from__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ReceiveUnit.from_)
}
inline ::std::string* ReceiveUnit::mutable_from_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ReceiveUnit.from_)
  return from__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReceiveUnit::release_from_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ReceiveUnit.from_)
  
  return from__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReceiveUnit::set_allocated_from_(::std::string* from_) {
  if (from_ != NULL) {
    
  } else {
    
  }
  from__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ReceiveUnit.from_)
}

// -------------------------------------------------------------------

// VoteUnit

// uint32 version_ = 1;
inline void VoteUnit::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 VoteUnit::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.version_)
  return version__;
}
inline void VoteUnit::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.version_)
}

// .ambr.protobuf.VoteUnit.Type type_ = 2;
inline void VoteUnit::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::VoteUnit_Type VoteUnit::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.type_)
  return static_cast< ::ambr::protobuf::VoteUnit_Type >(type__);
}
inline void VoteUnit::set_type_(::ambr::protobuf::VoteUnit_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.type_)
}

// bytes public_key_ = 3;
inline void VoteUnit::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.public_key_)
  return public_key__.GetNoArena();
}
inline void VoteUnit::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.public_key_)
}
#if LANG_CXX11
inline void VoteUnit::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.public_key_)
}
#endif
inline void VoteUnit::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.public_key_)
}
inline void VoteUnit::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.public_key_)
}
inline ::std::string* VoteUnit::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.public_key_)
}

// bytes prev_unit_ = 4;
inline void VoteUnit::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void VoteUnit::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.prev_unit_)
}
#if LANG_CXX11
inline void VoteUnit::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.prev_unit_)
}
#endif
inline void VoteUnit::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.prev_unit_)
}
inline void VoteUnit::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.prev_unit_)
}
inline ::std::string* VoteUnit::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.prev_unit_)
}

// bytes balance_ = 5;
inline void VoteUnit::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.balance_)
  return balance__.GetNoArena();
}
inline void VoteUnit::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.balance_)
}
#if LANG_CXX11
inline void VoteUnit::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.balance_)
}
#endif
inline void VoteUnit::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.balance_)
}
inline void VoteUnit::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.balance_)
}
inline ::std::string* VoteUnit::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.balance_)
}

// bytes hash_ = 6;
inline void VoteUnit::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.hash_)
  return hash__.GetNoArena();
}
inline void VoteUnit::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.hash_)
}
#if LANG_CXX11
inline void VoteUnit::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.hash_)
}
#endif
inline void VoteUnit::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.hash_)
}
inline void VoteUnit::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.hash_)
}
inline ::std::string* VoteUnit::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.hash_)
}

// bytes sign_ = 7;
inline void VoteUnit::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.sign_)
  return sign__.GetNoArena();
}
inline void VoteUnit::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.sign_)
}
#if LANG_CXX11
inline void VoteUnit::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.sign_)
}
#endif
inline void VoteUnit::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.sign_)
}
inline void VoteUnit::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.sign_)
}
inline ::std::string* VoteUnit::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.sign_)
}

// bytes validator_unit_hash_ = 8;
inline void VoteUnit::clear_validator_unit_hash_() {
  validator_unit_hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoteUnit::validator_unit_hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.validator_unit_hash_)
  return validator_unit_hash__.GetNoArena();
}
inline void VoteUnit::set_validator_unit_hash_(const ::std::string& value) {
  
  validator_unit_hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.validator_unit_hash_)
}
#if LANG_CXX11
inline void VoteUnit::set_validator_unit_hash_(::std::string&& value) {
  
  validator_unit_hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.VoteUnit.validator_unit_hash_)
}
#endif
inline void VoteUnit::set_validator_unit_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  validator_unit_hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.VoteUnit.validator_unit_hash_)
}
inline void VoteUnit::set_validator_unit_hash_(const void* value, size_t size) {
  
  validator_unit_hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.VoteUnit.validator_unit_hash_)
}
inline ::std::string* VoteUnit::mutable_validator_unit_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.VoteUnit.validator_unit_hash_)
  return validator_unit_hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteUnit::release_validator_unit_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.VoteUnit.validator_unit_hash_)
  
  return validator_unit_hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteUnit::set_allocated_validator_unit_hash_(::std::string* validator_unit_hash_) {
  if (validator_unit_hash_ != NULL) {
    
  } else {
    
  }
  validator_unit_hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validator_unit_hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.VoteUnit.validator_unit_hash_)
}

// uint32 accept_ = 9;
inline void VoteUnit::clear_accept_() {
  accept__ = 0u;
}
inline ::google::protobuf::uint32 VoteUnit::accept_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.VoteUnit.accept_)
  return accept__;
}
inline void VoteUnit::set_accept_(::google::protobuf::uint32 value) {
  
  accept__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.VoteUnit.accept_)
}

// -------------------------------------------------------------------

// ValidatorUnit

// uint32 version_ = 1;
inline void ValidatorUnit::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 ValidatorUnit::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.version_)
  return version__;
}
inline void ValidatorUnit::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.version_)
}

// .ambr.protobuf.ValidatorUnit.Type type_ = 2;
inline void ValidatorUnit::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::ValidatorUnit_Type ValidatorUnit::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.type_)
  return static_cast< ::ambr::protobuf::ValidatorUnit_Type >(type__);
}
inline void ValidatorUnit::set_type_(::ambr::protobuf::ValidatorUnit_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.type_)
}

// bytes public_key_ = 3;
inline void ValidatorUnit::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidatorUnit::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.public_key_)
  return public_key__.GetNoArena();
}
inline void ValidatorUnit::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.public_key_)
}
#if LANG_CXX11
inline void ValidatorUnit::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ValidatorUnit.public_key_)
}
#endif
inline void ValidatorUnit::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.public_key_)
}
inline void ValidatorUnit::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.public_key_)
}
inline ::std::string* ValidatorUnit::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidatorUnit::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ValidatorUnit.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidatorUnit::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ValidatorUnit.public_key_)
}

// bytes prev_unit_ = 4;
inline void ValidatorUnit::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidatorUnit::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void ValidatorUnit::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.prev_unit_)
}
#if LANG_CXX11
inline void ValidatorUnit::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ValidatorUnit.prev_unit_)
}
#endif
inline void ValidatorUnit::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.prev_unit_)
}
inline void ValidatorUnit::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.prev_unit_)
}
inline ::std::string* ValidatorUnit::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidatorUnit::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ValidatorUnit.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidatorUnit::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ValidatorUnit.prev_unit_)
}

// bytes balance_ = 5;
inline void ValidatorUnit::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidatorUnit::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.balance_)
  return balance__.GetNoArena();
}
inline void ValidatorUnit::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.balance_)
}
#if LANG_CXX11
inline void ValidatorUnit::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ValidatorUnit.balance_)
}
#endif
inline void ValidatorUnit::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.balance_)
}
inline void ValidatorUnit::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.balance_)
}
inline ::std::string* ValidatorUnit::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidatorUnit::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ValidatorUnit.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidatorUnit::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ValidatorUnit.balance_)
}

// bytes hash_ = 6;
inline void ValidatorUnit::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidatorUnit::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.hash_)
  return hash__.GetNoArena();
}
inline void ValidatorUnit::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.hash_)
}
#if LANG_CXX11
inline void ValidatorUnit::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ValidatorUnit.hash_)
}
#endif
inline void ValidatorUnit::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.hash_)
}
inline void ValidatorUnit::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.hash_)
}
inline ::std::string* ValidatorUnit::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidatorUnit::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ValidatorUnit.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidatorUnit::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ValidatorUnit.hash_)
}

// bytes sign_ = 7;
inline void ValidatorUnit::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidatorUnit::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.sign_)
  return sign__.GetNoArena();
}
inline void ValidatorUnit::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.sign_)
}
#if LANG_CXX11
inline void ValidatorUnit::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.ValidatorUnit.sign_)
}
#endif
inline void ValidatorUnit::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.sign_)
}
inline void ValidatorUnit::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.sign_)
}
inline ::std::string* ValidatorUnit::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidatorUnit::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.ValidatorUnit.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidatorUnit::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.ValidatorUnit.sign_)
}

// repeated bytes check_list_ = 8;
inline int ValidatorUnit::check_list__size() const {
  return check_list__.size();
}
inline void ValidatorUnit::clear_check_list_() {
  check_list__.Clear();
}
inline const ::std::string& ValidatorUnit::check_list_(int index) const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.check_list_)
  return check_list__.Get(index);
}
inline ::std::string* ValidatorUnit::mutable_check_list_(int index) {
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.check_list_)
  return check_list__.Mutable(index);
}
inline void ValidatorUnit::set_check_list_(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.check_list_)
  check_list__.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ValidatorUnit::set_check_list_(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.check_list_)
  check_list__.Mutable(index)->assign(std::move(value));
}
#endif
inline void ValidatorUnit::set_check_list_(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  check_list__.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.check_list_)
}
inline void ValidatorUnit::set_check_list_(int index, const void* value, size_t size) {
  check_list__.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.check_list_)
}
inline ::std::string* ValidatorUnit::add_check_list_() {
  // @@protoc_insertion_point(field_add_mutable:ambr.protobuf.ValidatorUnit.check_list_)
  return check_list__.Add();
}
inline void ValidatorUnit::add_check_list_(const ::std::string& value) {
  check_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ambr.protobuf.ValidatorUnit.check_list_)
}
#if LANG_CXX11
inline void ValidatorUnit::add_check_list_(::std::string&& value) {
  check_list__.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ambr.protobuf.ValidatorUnit.check_list_)
}
#endif
inline void ValidatorUnit::add_check_list_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  check_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ambr.protobuf.ValidatorUnit.check_list_)
}
inline void ValidatorUnit::add_check_list_(const void* value, size_t size) {
  check_list__.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ambr.protobuf.ValidatorUnit.check_list_)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ValidatorUnit::check_list_() const {
  // @@protoc_insertion_point(field_list:ambr.protobuf.ValidatorUnit.check_list_)
  return check_list__;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ValidatorUnit::mutable_check_list_() {
  // @@protoc_insertion_point(field_mutable_list:ambr.protobuf.ValidatorUnit.check_list_)
  return &check_list__;
}

// repeated bytes vote_hash_list_ = 9;
inline int ValidatorUnit::vote_hash_list__size() const {
  return vote_hash_list__.size();
}
inline void ValidatorUnit::clear_vote_hash_list_() {
  vote_hash_list__.Clear();
}
inline const ::std::string& ValidatorUnit::vote_hash_list_(int index) const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  return vote_hash_list__.Get(index);
}
inline ::std::string* ValidatorUnit::mutable_vote_hash_list_(int index) {
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  return vote_hash_list__.Mutable(index);
}
inline void ValidatorUnit::set_vote_hash_list_(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  vote_hash_list__.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ValidatorUnit::set_vote_hash_list_(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  vote_hash_list__.Mutable(index)->assign(std::move(value));
}
#endif
inline void ValidatorUnit::set_vote_hash_list_(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  vote_hash_list__.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
inline void ValidatorUnit::set_vote_hash_list_(int index, const void* value, size_t size) {
  vote_hash_list__.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
inline ::std::string* ValidatorUnit::add_vote_hash_list_() {
  // @@protoc_insertion_point(field_add_mutable:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  return vote_hash_list__.Add();
}
inline void ValidatorUnit::add_vote_hash_list_(const ::std::string& value) {
  vote_hash_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
#if LANG_CXX11
inline void ValidatorUnit::add_vote_hash_list_(::std::string&& value) {
  vote_hash_list__.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
#endif
inline void ValidatorUnit::add_vote_hash_list_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  vote_hash_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
inline void ValidatorUnit::add_vote_hash_list_(const void* value, size_t size) {
  vote_hash_list__.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ambr.protobuf.ValidatorUnit.vote_hash_list_)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ValidatorUnit::vote_hash_list_() const {
  // @@protoc_insertion_point(field_list:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  return vote_hash_list__;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ValidatorUnit::mutable_vote_hash_list_() {
  // @@protoc_insertion_point(field_mutable_list:ambr.protobuf.ValidatorUnit.vote_hash_list_)
  return &vote_hash_list__;
}

// uint32 percent_ = 10;
inline void ValidatorUnit::clear_percent_() {
  percent__ = 0u;
}
inline ::google::protobuf::uint32 ValidatorUnit::percent_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.percent_)
  return percent__;
}
inline void ValidatorUnit::set_percent_(::google::protobuf::uint32 value) {
  
  percent__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.percent_)
}

// repeated .ambr.protobuf.VoteUnit vote_list_ = 11;
inline int ValidatorUnit::vote_list__size() const {
  return vote_list__.size();
}
inline void ValidatorUnit::clear_vote_list_() {
  vote_list__.Clear();
}
inline ::ambr::protobuf::VoteUnit* ValidatorUnit::mutable_vote_list_(int index) {
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.ValidatorUnit.vote_list_)
  return vote_list__.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ambr::protobuf::VoteUnit >*
ValidatorUnit::mutable_vote_list_() {
  // @@protoc_insertion_point(field_mutable_list:ambr.protobuf.ValidatorUnit.vote_list_)
  return &vote_list__;
}
inline const ::ambr::protobuf::VoteUnit& ValidatorUnit::vote_list_(int index) const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.vote_list_)
  return vote_list__.Get(index);
}
inline ::ambr::protobuf::VoteUnit* ValidatorUnit::add_vote_list_() {
  // @@protoc_insertion_point(field_add:ambr.protobuf.ValidatorUnit.vote_list_)
  return vote_list__.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ambr::protobuf::VoteUnit >&
ValidatorUnit::vote_list_() const {
  // @@protoc_insertion_point(field_list:ambr.protobuf.ValidatorUnit.vote_list_)
  return vote_list__;
}

// uint64 time_stamp_ = 12;
inline void ValidatorUnit::clear_time_stamp_() {
  time_stamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ValidatorUnit::time_stamp_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.time_stamp_)
  return time_stamp__;
}
inline void ValidatorUnit::set_time_stamp_(::google::protobuf::uint64 value) {
  
  time_stamp__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.time_stamp_)
}

// uint64 nonce_ = 13;
inline void ValidatorUnit::clear_nonce_() {
  nonce__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ValidatorUnit::nonce_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.ValidatorUnit.nonce_)
  return nonce__;
}
inline void ValidatorUnit::set_nonce_(::google::protobuf::uint64 value) {
  
  nonce__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.ValidatorUnit.nonce_)
}

// -------------------------------------------------------------------

// EnterValidateSetUint

// uint32 version_ = 1;
inline void EnterValidateSetUint::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 EnterValidateSetUint::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.version_)
  return version__;
}
inline void EnterValidateSetUint::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.version_)
}

// .ambr.protobuf.EnterValidateSetUint.Type type_ = 2;
inline void EnterValidateSetUint::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::EnterValidateSetUint_Type EnterValidateSetUint::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.type_)
  return static_cast< ::ambr::protobuf::EnterValidateSetUint_Type >(type__);
}
inline void EnterValidateSetUint::set_type_(::ambr::protobuf::EnterValidateSetUint_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.type_)
}

// bytes public_key_ = 3;
inline void EnterValidateSetUint::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterValidateSetUint::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.public_key_)
  return public_key__.GetNoArena();
}
inline void EnterValidateSetUint::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.public_key_)
}
#if LANG_CXX11
inline void EnterValidateSetUint::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.EnterValidateSetUint.public_key_)
}
#endif
inline void EnterValidateSetUint::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.EnterValidateSetUint.public_key_)
}
inline void EnterValidateSetUint::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.EnterValidateSetUint.public_key_)
}
inline ::std::string* EnterValidateSetUint::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.EnterValidateSetUint.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterValidateSetUint::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.EnterValidateSetUint.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterValidateSetUint::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.EnterValidateSetUint.public_key_)
}

// bytes prev_unit_ = 4;
inline void EnterValidateSetUint::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterValidateSetUint::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void EnterValidateSetUint::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.prev_unit_)
}
#if LANG_CXX11
inline void EnterValidateSetUint::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.EnterValidateSetUint.prev_unit_)
}
#endif
inline void EnterValidateSetUint::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.EnterValidateSetUint.prev_unit_)
}
inline void EnterValidateSetUint::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.EnterValidateSetUint.prev_unit_)
}
inline ::std::string* EnterValidateSetUint::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.EnterValidateSetUint.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterValidateSetUint::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.EnterValidateSetUint.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterValidateSetUint::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.EnterValidateSetUint.prev_unit_)
}

// bytes balance_ = 5;
inline void EnterValidateSetUint::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterValidateSetUint::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.balance_)
  return balance__.GetNoArena();
}
inline void EnterValidateSetUint::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.balance_)
}
#if LANG_CXX11
inline void EnterValidateSetUint::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.EnterValidateSetUint.balance_)
}
#endif
inline void EnterValidateSetUint::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.EnterValidateSetUint.balance_)
}
inline void EnterValidateSetUint::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.EnterValidateSetUint.balance_)
}
inline ::std::string* EnterValidateSetUint::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.EnterValidateSetUint.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterValidateSetUint::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.EnterValidateSetUint.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterValidateSetUint::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.EnterValidateSetUint.balance_)
}

// bytes hash_ = 6;
inline void EnterValidateSetUint::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterValidateSetUint::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.hash_)
  return hash__.GetNoArena();
}
inline void EnterValidateSetUint::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.hash_)
}
#if LANG_CXX11
inline void EnterValidateSetUint::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.EnterValidateSetUint.hash_)
}
#endif
inline void EnterValidateSetUint::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.EnterValidateSetUint.hash_)
}
inline void EnterValidateSetUint::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.EnterValidateSetUint.hash_)
}
inline ::std::string* EnterValidateSetUint::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.EnterValidateSetUint.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterValidateSetUint::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.EnterValidateSetUint.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterValidateSetUint::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.EnterValidateSetUint.hash_)
}

// bytes sign_ = 7;
inline void EnterValidateSetUint::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterValidateSetUint::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.EnterValidateSetUint.sign_)
  return sign__.GetNoArena();
}
inline void EnterValidateSetUint::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.EnterValidateSetUint.sign_)
}
#if LANG_CXX11
inline void EnterValidateSetUint::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.EnterValidateSetUint.sign_)
}
#endif
inline void EnterValidateSetUint::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.EnterValidateSetUint.sign_)
}
inline void EnterValidateSetUint::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.EnterValidateSetUint.sign_)
}
inline ::std::string* EnterValidateSetUint::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.EnterValidateSetUint.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterValidateSetUint::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.EnterValidateSetUint.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterValidateSetUint::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.EnterValidateSetUint.sign_)
}

// -------------------------------------------------------------------

// LeaveValidateSetUint

// uint32 version_ = 1;
inline void LeaveValidateSetUint::clear_version_() {
  version__ = 0u;
}
inline ::google::protobuf::uint32 LeaveValidateSetUint::version_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.version_)
  return version__;
}
inline void LeaveValidateSetUint::set_version_(::google::protobuf::uint32 value) {
  
  version__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.version_)
}

// .ambr.protobuf.LeaveValidateSetUint.Type type_ = 2;
inline void LeaveValidateSetUint::clear_type_() {
  type__ = 0;
}
inline ::ambr::protobuf::LeaveValidateSetUint_Type LeaveValidateSetUint::type_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.type_)
  return static_cast< ::ambr::protobuf::LeaveValidateSetUint_Type >(type__);
}
inline void LeaveValidateSetUint::set_type_(::ambr::protobuf::LeaveValidateSetUint_Type value) {
  
  type__ = value;
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.type_)
}

// bytes public_key_ = 3;
inline void LeaveValidateSetUint::clear_public_key_() {
  public_key__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveValidateSetUint::public_key_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.public_key_)
  return public_key__.GetNoArena();
}
inline void LeaveValidateSetUint::set_public_key_(const ::std::string& value) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.public_key_)
}
#if LANG_CXX11
inline void LeaveValidateSetUint::set_public_key_(::std::string&& value) {
  
  public_key__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.LeaveValidateSetUint.public_key_)
}
#endif
inline void LeaveValidateSetUint::set_public_key_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.LeaveValidateSetUint.public_key_)
}
inline void LeaveValidateSetUint::set_public_key_(const void* value, size_t size) {
  
  public_key__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.LeaveValidateSetUint.public_key_)
}
inline ::std::string* LeaveValidateSetUint::mutable_public_key_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.LeaveValidateSetUint.public_key_)
  return public_key__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveValidateSetUint::release_public_key_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.LeaveValidateSetUint.public_key_)
  
  return public_key__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveValidateSetUint::set_allocated_public_key_(::std::string* public_key_) {
  if (public_key_ != NULL) {
    
  } else {
    
  }
  public_key__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.LeaveValidateSetUint.public_key_)
}

// bytes prev_unit_ = 4;
inline void LeaveValidateSetUint::clear_prev_unit_() {
  prev_unit__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveValidateSetUint::prev_unit_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
  return prev_unit__.GetNoArena();
}
inline void LeaveValidateSetUint::set_prev_unit_(const ::std::string& value) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
}
#if LANG_CXX11
inline void LeaveValidateSetUint::set_prev_unit_(::std::string&& value) {
  
  prev_unit__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
}
#endif
inline void LeaveValidateSetUint::set_prev_unit_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
}
inline void LeaveValidateSetUint::set_prev_unit_(const void* value, size_t size) {
  
  prev_unit__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
}
inline ::std::string* LeaveValidateSetUint::mutable_prev_unit_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
  return prev_unit__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveValidateSetUint::release_prev_unit_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
  
  return prev_unit__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveValidateSetUint::set_allocated_prev_unit_(::std::string* prev_unit_) {
  if (prev_unit_ != NULL) {
    
  } else {
    
  }
  prev_unit__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_unit_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.LeaveValidateSetUint.prev_unit_)
}

// bytes balance_ = 5;
inline void LeaveValidateSetUint::clear_balance_() {
  balance__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveValidateSetUint::balance_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.balance_)
  return balance__.GetNoArena();
}
inline void LeaveValidateSetUint::set_balance_(const ::std::string& value) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.balance_)
}
#if LANG_CXX11
inline void LeaveValidateSetUint::set_balance_(::std::string&& value) {
  
  balance__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.LeaveValidateSetUint.balance_)
}
#endif
inline void LeaveValidateSetUint::set_balance_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.LeaveValidateSetUint.balance_)
}
inline void LeaveValidateSetUint::set_balance_(const void* value, size_t size) {
  
  balance__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.LeaveValidateSetUint.balance_)
}
inline ::std::string* LeaveValidateSetUint::mutable_balance_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.LeaveValidateSetUint.balance_)
  return balance__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveValidateSetUint::release_balance_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.LeaveValidateSetUint.balance_)
  
  return balance__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveValidateSetUint::set_allocated_balance_(::std::string* balance_) {
  if (balance_ != NULL) {
    
  } else {
    
  }
  balance__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.LeaveValidateSetUint.balance_)
}

// bytes hash_ = 6;
inline void LeaveValidateSetUint::clear_hash_() {
  hash__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveValidateSetUint::hash_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.hash_)
  return hash__.GetNoArena();
}
inline void LeaveValidateSetUint::set_hash_(const ::std::string& value) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.hash_)
}
#if LANG_CXX11
inline void LeaveValidateSetUint::set_hash_(::std::string&& value) {
  
  hash__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.LeaveValidateSetUint.hash_)
}
#endif
inline void LeaveValidateSetUint::set_hash_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.LeaveValidateSetUint.hash_)
}
inline void LeaveValidateSetUint::set_hash_(const void* value, size_t size) {
  
  hash__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.LeaveValidateSetUint.hash_)
}
inline ::std::string* LeaveValidateSetUint::mutable_hash_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.LeaveValidateSetUint.hash_)
  return hash__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveValidateSetUint::release_hash_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.LeaveValidateSetUint.hash_)
  
  return hash__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveValidateSetUint::set_allocated_hash_(::std::string* hash_) {
  if (hash_ != NULL) {
    
  } else {
    
  }
  hash__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.LeaveValidateSetUint.hash_)
}

// bytes sign_ = 7;
inline void LeaveValidateSetUint::clear_sign_() {
  sign__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveValidateSetUint::sign_() const {
  // @@protoc_insertion_point(field_get:ambr.protobuf.LeaveValidateSetUint.sign_)
  return sign__.GetNoArena();
}
inline void LeaveValidateSetUint::set_sign_(const ::std::string& value) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ambr.protobuf.LeaveValidateSetUint.sign_)
}
#if LANG_CXX11
inline void LeaveValidateSetUint::set_sign_(::std::string&& value) {
  
  sign__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ambr.protobuf.LeaveValidateSetUint.sign_)
}
#endif
inline void LeaveValidateSetUint::set_sign_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ambr.protobuf.LeaveValidateSetUint.sign_)
}
inline void LeaveValidateSetUint::set_sign_(const void* value, size_t size) {
  
  sign__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ambr.protobuf.LeaveValidateSetUint.sign_)
}
inline ::std::string* LeaveValidateSetUint::mutable_sign_() {
  
  // @@protoc_insertion_point(field_mutable:ambr.protobuf.LeaveValidateSetUint.sign_)
  return sign__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveValidateSetUint::release_sign_() {
  // @@protoc_insertion_point(field_release:ambr.protobuf.LeaveValidateSetUint.sign_)
  
  return sign__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveValidateSetUint::set_allocated_sign_(::std::string* sign_) {
  if (sign_ != NULL) {
    
  } else {
    
  }
  sign__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_);
  // @@protoc_insertion_point(field_set_allocated:ambr.protobuf.LeaveValidateSetUint.sign_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace ambr

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ambr::protobuf::SendUnit_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::SendUnit_Type>() {
  return ::ambr::protobuf::SendUnit_Type_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::SendUnit_DataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::SendUnit_DataType>() {
  return ::ambr::protobuf::SendUnit_DataType_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::ReceiveUnit_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::ReceiveUnit_Type>() {
  return ::ambr::protobuf::ReceiveUnit_Type_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::VoteUnit_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::VoteUnit_Type>() {
  return ::ambr::protobuf::VoteUnit_Type_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::ValidatorUnit_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::ValidatorUnit_Type>() {
  return ::ambr::protobuf::ValidatorUnit_Type_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::EnterValidateSetUint_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::EnterValidateSetUint_Type>() {
  return ::ambr::protobuf::EnterValidateSetUint_Type_descriptor();
}
template <> struct is_proto_enum< ::ambr::protobuf::LeaveValidateSetUint_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ambr::protobuf::LeaveValidateSetUint_Type>() {
  return ::ambr::protobuf::LeaveValidateSetUint_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_unit_2eproto
